{"version":3,"sources":["../node_modules/prismjs/components/prism-markup.js"],"names":["Prism","languages","markup","pattern","greedy","inside","lookbehind","hooks","add","env","type","attributes","content","replace","Object","defineProperty","tag","value","tagName","lang","includedCdataInside","def","RegExp","source","insertBefore","xml","extend","html","mathml","svg"],"mappings":"2FAAAA,MAAMC,UAAUC,OAAS,CACxB,QAAW,kBACX,OAAU,iBACV,QAAW,CACVC,QAAS,4GACTC,QAAQ,GAET,MAAS,0BACT,IAAO,CACND,QAAS,wHACTC,QAAQ,EACRC,OAAQ,CACP,IAAO,CACNF,QAAS,kBACTE,OAAQ,CACP,YAAe,QACf,UAAa,iBAGf,aAAc,CACbF,QAAS,sCACTE,OAAQ,CACP,YAAe,CACd,KACA,CACCF,QAAS,mBACTG,YAAY,MAKhB,YAAe,OACf,YAAa,CACZH,QAAS,YACTE,OAAQ,CACP,UAAa,mBAMjB,OAAU,qBAGXL,MAAMC,UAAUC,OAAhB,IAA8BG,OAAO,cAAcA,OAAnD,OACCL,MAAMC,UAAUC,OAAhB,OAGDF,MAAMO,MAAMC,IAAI,QAAQ,SAASC,GAEf,WAAbA,EAAIC,OACPD,EAAIE,WAAJ,MAA0BF,EAAIG,QAAQC,QAAQ,QAAS,SAIzDC,OAAOC,eAAef,MAAMC,UAAUC,OAAOc,IAAK,aAAc,CAY/DC,MAAO,SAAoBC,EAASC,GACnC,IAAIC,EAAsB,GAC1BA,EAAoB,YAAcD,GAAQ,CACzChB,QAAS,oCACTG,YAAY,EACZD,OAAQL,MAAMC,UAAUkB,IAEzBC,EAAmB,MAAY,uBAE/B,IAAIf,EAAS,CACZ,iBAAkB,CACjBF,QAAS,4BACTE,OAAQe,IAGVf,EAAO,YAAcc,GAAQ,CAC5BhB,QAAS,UACTE,OAAQL,MAAMC,UAAUkB,IAGzB,IAAIE,EAAM,GACVA,EAAIH,GAAW,CACdf,QAASmB,OAAO,mEAAmEC,OAAOV,QAAQ,OAAO,WAAc,OAAOK,KAAa,KAC3IZ,YAAY,EACZF,QAAQ,EACRC,OAAQA,GAGTL,MAAMC,UAAUuB,aAAa,SAAU,QAASH,MAIlDrB,MAAMC,UAAUwB,IAAMzB,MAAMC,UAAUyB,OAAO,SAAU,IACvD1B,MAAMC,UAAU0B,KAAO3B,MAAMC,UAAUC,OACvCF,MAAMC,UAAU2B,OAAS5B,MAAMC,UAAUC,OACzCF,MAAMC,UAAU4B,IAAM7B,MAAMC,UAAUC","file":"static/js/233.826dbe8d.chunk.js","sourcesContent":["Prism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:(?!<!--)[^\"'\\]]|\"[^\"]*\"|'[^']*'|<!--[\\s\\S]*?-->)*\\]\\s*)?>/i,\n\t\tgreedy: true\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n"],"sourceRoot":""}