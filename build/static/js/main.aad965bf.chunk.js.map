{"version":3,"sources":["context.js","Components/DashBoard/DashboardPaneComponents/LeftPane.js","util/env_config.js","Components/DashBoard/Repository/RepoComponents/AddRepoForm.js","Components/DashBoard/Repository/RepoComponents/RepoCard.js","Components/DashBoard/Repository/RepoComponents/RepoComponent.js","actionStore.js","Components/DashBoard/DashboardPaneComponents/RightPane.js","Components/DashBoard/Repository/GitComponents/GitDiffViewComponent.js","Components/DashBoard/Repository/GitComponents/GitOperation/CommitComponent.js","Components/DashBoard/Repository/GitComponents/GitOperation/PushComponent.js","Components/DashBoard/Repository/GitComponents/GitOperation/StageComponent.js","Components/DashBoard/Repository/GitComponents/GitOperation/GitOperationComponent.js","Components/DashBoard/Repository/GitComponents/GitTrackedComponent.js","Components/DashBoard/Repository/RepoComponents/RepositoryAction.js","Components/DashBoard/Repository/RepoComponents/RepositoryCommitLogComponent.js","Components/DashBoard/Repository/RepoComponents/RepositoryDetails.js","Components/DashBoard/Settings/Settings.js","Components/DashBoard/Dashboard.js","Components/SplashScreen.js","reducer.js","App.js","serviceWorker.js","index.js"],"names":["ContextProvider","React","createContext","hcDone","platform","git","node","globalRepoId","hcParams","presentRepo","modifiedGitFiles","gitUntrackedFiles","gitTrackedFiles","LeftPane","props","menuItemParams","link","icon","FolderOutlined","style","color","fontSize","label","SettingsOutlined","HelpOutline","className","onClick","event","parentProps","history","push","map","entry","to","exact","activeClassName","key","globalAPIEndpoint","window","location","hostname","AddRepoForm","useState","repoNameState","setRepoName","repoPathState","setRepoPath","repoAddFailed","setRepoAddFailed","repoAddSuccess","setRepoAddSuccess","repoNameRef","useRef","repoPathRef","initCheckRef","resetAlertBanner","type","placeholder","onChange","target","value","ref","id","htmlFor","repoName","repoPath","initCheck","current","checked","payload","JSON","stringify","axios","url","method","data","query","then","res","error","message","gitConvexApi","addRepo","match","catch","err","console","log","storeRepoAPI","formEnable","RepoCard","library","add","fab","fas","repoData","repoFooterData","setRepoFooterData","useEffect","repoId","headers","gitRepoStatus","avatar","split","length","tempName","substring","toUpperCase","gitTotalCommits","gitTotalTrackedFiles","gitCurrentBranch","RepoComponent","repo","setRepo","repoFormEnable","setRepoFormEnable","dispatch","useContext","fetchRepoURL","apiResponse","fetchRepo","repoContent","forEach","index","param","repoArray","onMouseEnter","stopPropagation","preventDefault","innerHTML","onMouseLeave","showAvailableRepo","RightPane","params","gitVersion","nodeVersion","repoEntry","GitDiffViewComponent","state","changedFiles","setChangedFiles","diffStatState","setDiffStatState","fileLineDiffState","setFileLineDiffState","activeFileName","setActiveFileName","isApiCalled","setIsApiCalled","apiEndPoint","gitChangedFiles","gitChanges","fileEntry","fileName","gitFileLineChanges","diffStat","fileDiff","fileDiffStatComponent","includes","splitStat","slice","parts","Date","getTime","toString","statFormat","splitLines","join","line","uuidv4","dangerouslySetInnerHTML","__html","Prism","highlight","replace","languages","javascript","fileLineDiffComponent","CommitComponent","loading","setLoading","stagedFilesState","setStagedFilesState","commitDone","setCommitDone","commitError","setCommitError","commitRef","source","CancelToken","cancelToken","token","stagedFiles","gitStagedFiles","cancel","stagedCount","height","stagedFile","cols","rows","commitMsg","commitChanges","commitHandler","alert","commitComponent","PushComponent","remoteData","setRemoteData","isRemoteSet","setIsRemoteSet","isBranchSet","setIsBranchSet","unpushedCommits","setUnpushedCommits","isCommitEmpty","setIsCommitEmpty","pushDone","setPushDone","pushFailed","setPushFailed","remoteRef","branchRef","commitModel","commit","splitCommit","left","right","repoDetails","defaultValue","disabled","hidden","gitRemoteData","item","remoteHostGenerator","commits","gitUnpushedCommits","getUnpushedCommits","gitBranchList","branch","branchListGenerator","remote","remoteHost","branchName","StageComponent","stageComponents","allStaged","setAllStaged","errorInd","setErrorInd","stageAllItems","GitOperationComponent","setGitTrackedFiles","setGitUntrackedFiles","action","setAction","list","setList","viewReload","setViewReload","currentStageItem","setCurrensStageitem","stageItems","setStagedItems","apiData","apiTrackedFiles","apiUnTrackedFiles","componentList","trackedItem","getTableData","tableDataArray","statusPill","status","actionButton","stageItem","stageGitComponent","background","actionComponent","cellPadding","column","tableData","removeAllStagedItem","removeStagedItem","localStagedItems","filter","filterItem","getStagedFilesComponent","GitTrackedComponent","gitDiffFilesState","setGitDiffFilesState","gitUntrackedFilesState","setGitUntrackedFilesState","topMenuItemState","setTopMenuItemState","topMenuItems","noChangeMarker","setNoChangeMarker","memoizedGitDiffView","useMemo","memoizedGitOperationView","styleSelector","deletedArtifacts","modifiedArtifacts","diffFile","splitFile","flag","name","diffPane","untrackedDir","untrackedFile","splitEntry","untrackedPane","menuComponent","RepositoryAction","selectedFlag","setSelectedFlag","defaultRepo","setDefaultRepo","availableRepos","setAvailableRepos","activeBranch","setActiveBranch","selectedRepoDetails","setSelectedRepoDetails","branchError","setBranchError","memoizedGitTracker","getTopPaneComponent","fetchSelectedRepoStatus","a","invokeRepoFetchAPI","elm","defaultChecked","persist","currentTarget","selectedIndex","setTrackingBranch","availableBranch","RepositoryCommitLogComponent","commitLogs","setCommitLogs","gitCommitLogs","hash","author","commitTime","commitMessage","RepositoryDetails","setGitRepoStatus","repoFetchFailed","setRepoFetchFailed","repoIdState","setRepoIdState","showCommitLogs","setShowCommitLogs","isMultiRemote","setIsMultiRemote","multiRemoteCount","setMultiRemoteCount","memoizedCommitLogComponent","endpointURL","pathname","gitRemoteLocal","gitRepoName","gitRemoteHost","gitLatestCommit","gitFileBasedCommit","remoteLogo","zIndex","cellSpacing","gitRepoLeftPane","formattedFiles","directoryEntry","gitTrackedFileComponent","Settings","dbPathTextRef","dbPath","setDbPath","setRepoDetails","dbPathText","settingsDatabasePath","repoDetailsArray","settingsRepoDetails","timeStamp","Dashboard","setPlatform","setGitVersion","setNodeVersion","memoizedRepoDetails","memoizedSettings","osCheck","gitCheck","nodeCheck","localStorage","getItem","healthCheck","parse","path","renderRightPaneComponent","SplashScreen","showAlert","setShowAlert","hcCheck","setHcCheck","apiURL","reducer","parseValue","setItem","App","useReducer","Provider","component","Boolean","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aad965bf.chunk.js","sourcesContent":["import React from 'react'\n\nconst contextValues = {\n   hcDone: false,\n   platform: \"\",\n   git:\"\",\n   node:\"\",\n   globalRepoId: \"\",\n   hcParams: {},\n   presentRepo: [],\n   modifiedGitFiles: [],\n   gitUntrackedFiles: [],\n   gitTrackedFiles: []   \n}\n\nexport const ContextProvider =  React.createContext(contextValues)\n","import {\n  FolderOutlined,\n  HelpOutline,\n  SettingsOutlined,\n} from \"@material-ui/icons\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport default function LeftPane(props) {\n  const menuItemParams = [\n    {\n      link: \"/dashboard/repository\",\n      icon: (\n        <FolderOutlined\n          style={{ color: \"grey\", fontSize: \"36px\" }}\n        ></FolderOutlined>\n      ),\n      label: \"Repositories\",\n    },\n    {\n      link: \"/dashboard/settings\",\n      icon: (\n        <SettingsOutlined\n          style={{ color: \"grey\", fontSize: \"36px\" }}\n        ></SettingsOutlined>\n      ),\n      label: \"Settings\",\n    },\n    {\n      link: \"/dashboard/help\",\n      icon: (\n        <HelpOutline style={{ color: \"grey\", fontSize: \"36px\" }}></HelpOutline>\n      ),\n      label: \"Help\",\n    },\n  ];\n\n  return (\n    <div className=\"dashboard-leftpane w-1/4 shadow-md block p-3 bg-white-400\">\n      <div\n        className=\"flex justify-center items-center bg-blue-100 cursor-pointer\"\n        onClick={(event) => {\n          props.parentProps.history.push(\"/dashboard\");\n        }}\n      >\n        <div className=\"block dashboard-leftpane__logo\"></div>\n        <div className=\"font-mono text-2xl p-4 text-3xl\">\n          <span className=\"font-bold mx-2 border-b-4 border-pink-400\">Git</span>\n          Convex\n        </div>\n      </div>\n      <div className=\"mt-32 cursor-pointer\">\n        {menuItemParams.map((entry) => {\n          return (\n            <NavLink\n              to={`${entry.link}`}\n              exact\n              activeClassName=\"bg-gray-300\"\n              className=\"flex border-b border-black-100 p-3 hover:bg-gray-100\"\n              key={entry.label}\n            >\n              <div className=\"flex\">\n                <div>{entry.icon}</div>\n                <div className=\"ml-2 text-2xl text-gray-700\">{entry.label}</div>\n              </div>\n            </NavLink>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","// Global ENV file for all environment variables\n\n//PORTS LIST\n\nexport const PORT_GLOBAL_API = 9001;\n\n//CONFIG LIST\n\nexport const CONFIG_HTTP_MODE = \"http\";\n\n//API LIST\n\nexport const API_GLOBAL_GQL = \"gitconvexapi\";\n\nexport const globalAPIEndpoint = `${CONFIG_HTTP_MODE}://${window.location.hostname}:${PORT_GLOBAL_API}/${API_GLOBAL_GQL}`;\n\n// ROUTED FOR GLOBAL API\n\nexport const ROUTE_HEALTH_CHECK = \"HEALTH_CHECK\";\nexport const ROUTE_FETCH_REPO = \"FETCH_REPO\";\nexport const ROUTE_ADD_REPO = \"ADD_REPO\";\nexport const ROUTE_REPO_DETAILS = \"REPO_DETAILS\";\nexport const ROUTE_REPO_TRACKED_DIFF = \"REPO_TRACKED_DIFF\";\nexport const ROUTE_REPO_FILE_DIFF = \"REPO_FILE_DIFF\";\nexport const ROUTE_REPO_COMMIT_LOGS = \"COMMIT_LOGS\";\nexport const ROUTE_GIT_STAGED_FILES = \"GIT_STAGED_FILES\";\nexport const GIT_UNPUSHED_COMMITS = \"GIT_UNPUSHED_COMMITS\";\nexport const ROUTE_SETTINGS_DBPATH = \"SETTINGS_DBPATH\";\nexport const ROUTE_SETTINGS_REPODETAILS = \"SETTINGS_REPODETAILS\";\n","import axios from \"axios\";\nimport React, { useRef, useState } from \"react\";\nimport { globalAPIEndpoint, ROUTE_ADD_REPO } from \"../../../../util/env_config\";\n\nexport default function AddRepoForm(props) {\n  const [repoNameState, setRepoName] = useState(\"\");\n  const [repoPathState, setRepoPath] = useState(\"\");\n  const [repoAddFailed, setRepoAddFailed] = useState(false);\n  const [repoAddSuccess, setRepoAddSuccess] = useState(false);\n\n  const repoNameRef = useRef();\n  const repoPathRef = useRef();\n  const initCheckRef = useRef();\n\n  function storeRepoAPI(repoName, repoPath) {\n    if (repoName && repoPath) {\n      let initCheck = false;\n\n      if (initCheckRef.current.checked) {\n        initCheck = true;\n      }\n\n      let payload = JSON.stringify(\n        JSON.stringify({ repoName, repoPath, initCheck })\n      );\n\n      axios({\n        url: globalAPIEndpoint,\n        method: \"POST\",\n        data: {\n          query: `\n              query GitConvexApi{\n                gitConvexApi(route: \"${ROUTE_ADD_REPO}\", payload: ${payload}){\n                  addRepo{\n                    message\n                  }\n                }\n              }\n            `,\n        },\n      })\n        .then((res) => {\n          if (res.data && res.data.data && !res.data.error) {\n            const { message } = res.data.data.gitConvexApi.addRepo;\n\n            if (message && !message.match(/FAIL/g)) {\n              setRepoAddSuccess(true);\n              setRepoAddFailed(false);\n              repoNameRef.current.value = \"\";\n              repoPathRef.current.value = \"\";\n              initCheckRef.current.value = \"\";\n            } else {\n              setRepoAddFailed(true);\n              setRepoAddSuccess(false);\n            }\n          } else {\n            setRepoAddFailed(true);\n            setRepoAddSuccess(false);\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    } else {\n      setRepoAddFailed(true);\n    }\n  }\n\n  function resetAlertBanner() {\n    setRepoAddFailed(false);\n    setRepoAddSuccess(false);\n  }\n\n  function repoAddStatusBanner() {\n    if (repoAddSuccess) {\n      return (\n        <div className=\"my-6 mx-auto block p-3 w-1/2 rounded-lg shadow-sm border border-green-500 bg-green-200 text-xl text-green-800 text-center\">\n          New repo added\n        </div>\n      );\n    } else if (repoAddFailed) {\n      return (\n        <div className=\"my-6 mx-auto block p-3 w-1/2 rounded-lg shadow-sm border border-red-500 bg-red-200 text-xl text-red-800 text-center\">\n          Process failed! Please try again\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <div className=\"block text-center justify-center my-20 p-6 rounded-lg shadow-md border-2 border-gray-200 w-1/2 mx-auto\">\n      <div className=\"repo-form block\">\n        {repoAddStatusBanner()}\n        <div className=\"my-3 text-center block text-3xl font-sans text-gray-800\">\n          Enter Repo Details\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter a Repository Name\"\n            className=\"w-11/12 p-3 my-3 rounded-md outline-none border-blue-100 border-2 shadow-md\"\n            onChange={(event) => {\n              setRepoName(event.target.value);\n            }}\n            ref={repoNameRef}\n            onClick={() => {\n              resetAlertBanner();\n            }}\n          ></input>\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter repository path\"\n            className=\"w-11/12 p-3 my-3 rounded-md outline-none border-blue-100 border-2 shadow-md\"\n            onChange={(event) => {\n              setRepoPath(event.target.value);\n            }}\n            ref={repoPathRef}\n            onClick={() => {\n              resetAlertBanner();\n            }}\n          ></input>\n        </div>\n        <div className=\"cursor-pointer my-4\">\n          <input\n            id=\"initCheck\"\n            type=\"checkbox\"\n            value=\"initRepo\"\n            ref={initCheckRef}\n          ></input>\n          <label\n            htmlFor=\"initCheck\"\n            className=\"mx-2 text-gray-700 font-sans font-semibold\"\n          >\n            Check this if the folder is not a git repo\n          </label>\n        </div>\n        <div className=\"flex w-11/12 justify-start mx-auto my-5 cursor-pointer\">\n          <div\n            className=\"block w-1/2 mx-3 p-3 my-2 bg-green-400 rounded-md shadow-md hover:bg-green-500\"\n            onClick={() => {\n              storeRepoAPI(repoNameState, repoPathState);\n            }}\n          >\n            Submit\n          </div>\n          <div\n            className=\"my-2 w-1/2 block mx-3 p-3 bg-red-400 rounded-md shadow-md hover:bg-red-500\"\n            onClick={() => {\n              props.formEnable(false);\n            }}\n          >\n            Close\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_REPO_DETAILS,\n} from \"../../../../util/env_config\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function RepoCard(props) {\n  library.add(fab, fas);\n  const { repoData } = props;\n\n  const [repoFooterData, setRepoFooterData] = useState(\"\");\n\n  useEffect(() => {\n    let repoId = props.repoData.id;\n    const payload = JSON.stringify(JSON.stringify({ repoId: repoId }));\n\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      data: {\n        query: `\n    \n                query GitConvexApi\n                {\n                  gitConvexApi(route: \"${ROUTE_REPO_DETAILS}\", payload: ${payload}){\n                    gitRepoStatus {\n                      gitTotalCommits\n                      gitTotalTrackedFiles  \n                      gitCurrentBranch  \n                    }\n                  }\n                }\n              `,\n      },\n    })\n      .then((res) => {\n        setRepoFooterData(res.data.data.gitConvexApi.gitRepoStatus);\n      })\n      .catch((err) => {\n        if (err) {\n          console.log(\"API GitStatus error occurred : \" + err);\n        }\n      });\n  }, [props]);\n\n  const repoName = repoData.repoName;\n  var avatar = \"\";\n\n  if (repoName) {\n    if (repoName.split(\" \").length > 1) {\n      let tempName = repoName.split(\" \");\n      avatar = tempName[0].substring(0, 1) + tempName[1].substring(0, 1);\n      avatar = avatar.toUpperCase();\n    } else {\n      avatar = repoName.substring(0, 1).toUpperCase();\n    }\n  }\n\n  return (\n    <NavLink\n      to={`/dashboard/repository/${repoData.id}`}\n      className=\"w-11/12 xl:w-1/3 lg:w-2/3 md:w-1/2 block p-6 mx-6 rounded-lg border border-gray-300 shadow-md my-6 text-center bg-indigo-500 cursor-pointer hover:shadow-xl\"\n      key={repoData.repoName}\n    >\n      <div className=\"text-center bg-indigo-300 text-white text-5xl my-2 px-10 py-5 rounded shadow\">\n        {avatar}\n      </div>\n      <div className=\"my-4 font-sans text-2xl text-white border-dashed border-b-2 pb-2 border-indigo-300\">\n        {repoData.repoName}\n      </div>\n      <div className=\"w-full flex justify-center mx-auto my-2 text-center rounded-md shadow-sm align-middle\">\n        <div className=\"w-1/2 flex p-2 bg-white shadow-lg border-indigo-300 rounded-l-md my-2 items-center\">\n          <FontAwesomeIcon\n            className=\"my-auto\"\n            icon={[\"fas\", \"grip-lines\"]}\n          ></FontAwesomeIcon>\n          <div className=\"mx-2 text-sm text-center font-sans text-center\">\n            {repoFooterData.gitTotalCommits} Commits\n          </div>\n        </div>\n        <div className=\"w-1/2 flex p-2 bg-white shadow-lg border-indigo-300 my-2 items-center\">\n          <FontAwesomeIcon\n            className=\"my-auto\"\n            icon={[\"fas\", \"file-alt\"]}\n          ></FontAwesomeIcon>\n          <div className=\"mx-2 text-sm text-center font-sans text-center\">\n            {repoFooterData.gitTotalTrackedFiles} Tracked Files\n          </div>\n        </div>\n        <div className=\"w-1/2 flex p-2 bg-white shadow-lg border-indigo-300 rounded-r-md my-2 items-center\">\n          <FontAwesomeIcon\n            className=\"my-auto\"\n            icon={[\"fas\", \"code-branch\"]}\n          ></FontAwesomeIcon>\n          <div className=\"mx-2  text-sm text-center font-sans text-center font-semibold\">\n            {repoFooterData.gitCurrentBranch}\n          </div>\n        </div>\n      </div>\n    </NavLink>\n  );\n}\n","import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { PRESENT_REPO } from \"../../../../actionStore\";\nimport { ContextProvider } from \"../../../../context\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_FETCH_REPO,\n} from \"../../../../util/env_config\";\nimport AddRepoFormComponent from \"./AddRepoForm\";\nimport RepoCard from \"./RepoCard\";\n\nexport default function RepoComponent(props) {\n  const [repo, setRepo] = useState([]);\n  const [repoFormEnable, setRepoFormEnable] = useState(false);\n\n  const { dispatch } = useContext(ContextProvider);\n\n  useEffect(() => {\n    const fetchRepoURL = globalAPIEndpoint;\n\n    axios({\n      url: fetchRepoURL,\n      method: \"POST\",\n      data: {\n        query: `\n          query GitConvexResults{\n            gitConvexApi(route: \"${ROUTE_FETCH_REPO}\"){\n              fetchRepo{\n                repoId\n                repoName\n                repoPath\n              }\n            }\n          }\n        `,\n      },\n    }).then((res) => {\n      const apiResponse = res.data.data.gitConvexApi.fetchRepo;\n\n      if (apiResponse) {\n        const { repoId, repoName } = apiResponse;\n        let repoContent = [];\n\n        repoId.forEach((entry, index) => {\n          repoContent.push({ id: entry, repoName: repoName[index] });\n        });\n\n        setRepo(repoContent);\n\n        dispatch({\n          type: PRESENT_REPO,\n          payload: repoContent,\n        });\n      }\n    });\n  }, [repoFormEnable, dispatch]);\n\n  const showAvailableRepo = () => {\n    const repoArray = repo;\n\n    return (\n      <>\n        <div className=\"w-full mx-auto justify-around flex flex-wrap pb-40\">\n          <>\n            {repoArray.length > 0 ? (\n              <>\n                {repoArray.map((entry) => {\n                  return <RepoCard key={entry.id} repoData={entry}></RepoCard>;\n                })}\n              </>\n            ) : (\n              <div className=\"mx-auto w-3/4 rounded-md text-center shadow bg-gray-200 text-gray-500 font-sans p-10 my-10 text-xl\">\n                No repos present. Press + to add a new repo\n              </div>\n            )}\n          </>\n        </div>\n        <>\n          <div\n            className=\"fixed bottom-0 right-0 mb-16 mr-20 cursor-pointer border-2 border-indigo-100 shadow-lg bg-indigo-500 hover:bg-indigo-400 rounded-full h-16 w-16 pb-1 flex items-center justify-center text-3xl text-white font-sans font-black\"\n            onClick={() => {\n              setRepoFormEnable(true);\n            }}\n            onMouseEnter={(event) => {\n              event.stopPropagation();\n              event.preventDefault();\n              let popUp =\n                '<div class=\"p-2 rounded bg-white text-gray-700 w-48 mt-16 text-center font-sans font-medium border border-gray-300 text-sm my-2 fixed\">Click to add a new repo</div>';\n              event.target.innerHTML += popUp;\n            }}\n            onMouseLeave={(event) => {\n              event.target.innerHTML = \"+\";\n            }}\n          >\n            +\n          </div>\n        </>\n      </>\n    );\n  };\n\n  const addFormRemove = (param) => {\n    setRepoFormEnable(param);\n  };\n\n  return (\n    <div className=\"flex flex-wrap mx-auto justify-center text-center align-middle\">\n      {!repoFormEnable ? (\n        showAvailableRepo()\n      ) : (\n        <AddRepoFormComponent formEnable={addFormRemove}></AddRepoFormComponent>\n      )}\n    </div>\n  );\n}\n","export const HC_PARAM_ACTION = \"HC_PARAM_ACTION\";\nexport const HC_DONE_SWITCH = \"HC_DONE_SWITCH\";\nexport const PRESENT_REPO = \"PRESENT_REPO\";\nexport const GIT_TRACKED_FILES = \"GIT_TRACKED_FILES\";\nexport const GIT_GLOBAL_REPOID = \"GIT_GLOBAL_REPOID\"\nexport const GIT_ACTION_TRACKED_FILES = \"GIT_ACTION_TRACKED_FILES\"\nexport const GIT_ACTION_UNTRACKED_FILES = \"GIT_ACTION_UNTRACKED_FILES\"\n","import React from \"react\";\nimport RepoComponent from \"../Repository/RepoComponents/RepoComponent\";\n\nexport default function RightPane(props) {\n  const { platform, gitVersion, nodeVersion } = props.params;\n\n  const hcParams = [\n    {\n      label: \"Platform\",\n      value: platform,\n    },\n    {\n      label: \"Git\",\n      value: gitVersion,\n    },\n    {\n      label: \"Node\",\n      value: nodeVersion,\n    },\n  ];\n\n  return (\n    <>\n      <div className=\"dashboard-rightpane w-11/12 mx-auto justify-center overflow-auto\">\n        <div className=\"w-11/12 p-3 my-4 rounded-lg shadow-md flex rightpane-details flex justify-between mx-auto bg-blue-100 border-2 border-blue-100\">\n          {hcParams.map((entry) => {\n            return (\n              <div key={entry.label}>\n                <span className=\"rightpane-details__header\">{entry.label}</span>\n                {entry.value !== \"\" ? (\n                  <span\n                    className=\"bg-green-200 border-green-800 text-green-900 p-2 rounded-lg hc-param\"\n                    id={`hc-param__${entry.label}`}\n                  >\n                    {entry.value}\n                  </span>\n                ) : (\n                  <span className=\"rounded-md bg-red-200 text-red-900 font-bold p-2\">\n                    Invalid\n                  </span>\n                )}\n              </div>\n            );\n          })}\n        </div>\n        {repoEntry()}\n      </div>\n    </>\n  );\n\n  function repoEntry() {\n    if (platform && gitVersion && nodeVersion) {\n      return <RepoComponent parentProps={props}></RepoComponent>;\n    }\n  }\n}\n","import axios from \"axios\";\nimport Prism from \"prismjs\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { GIT_TRACKED_FILES } from \"../../../../actionStore\";\nimport { ContextProvider } from \"../../../../context\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_REPO_FILE_DIFF,\n  ROUTE_REPO_TRACKED_DIFF,\n} from \"../../../../util/env_config\";\n\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport default function GitDiffViewComponent() {\n  const { state, dispatch } = useContext(ContextProvider);\n  const repoId = state.globalRepoId;\n\n  const [changedFiles, setChangedFiles] = useState([]);\n  const [diffStatState, setDiffStatState] = useState(\n    \"Click on a file item to see the difference\"\n  );\n  const [fileLineDiffState, setFileLineDiffState] = useState([]);\n  const [activeFileName, setActiveFileName] = useState(\"\");\n  const [isApiCalled, setIsApiCalled] = useState(false);\n\n  useEffect(() => {\n    let repoId = state.globalRepoId;\n\n    setActiveFileName(\"\");\n    setFileLineDiffState(\"Click on a file item to see the difference\");\n    setDiffStatState(\"Click on a file item to see the difference\");\n    let apiEndPoint = globalAPIEndpoint;\n    if (repoId) {\n      const payload = JSON.stringify(JSON.stringify({ repoId: repoId }));\n\n      axios({\n        url: apiEndPoint,\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        data: {\n          query: `\n            query GitConvexApi{\n              gitConvexApi(route: \"${ROUTE_REPO_TRACKED_DIFF}\", payload:${payload})\n              {\n                gitChanges{\n                  gitChangedFiles\n                }\n              }\n            }\n          `,\n        },\n      })\n        .then((res) => {\n          if (res) {\n            var apiData = res.data.data.gitConvexApi.gitChanges;\n            const { gitChangedFiles } = apiData;\n            setChangedFiles([...gitChangedFiles]);\n            setIsApiCalled(true);\n            dispatch({ type: GIT_TRACKED_FILES, payload: gitChangedFiles });\n          }\n        })\n        .catch((err) => {\n          return err;\n        });\n    }\n  }, [state.globalRepoId, dispatch]);\n\n  function getDiffFiles() {\n    return (\n      <>\n        {changedFiles.length >= 1 &&\n          changedFiles.map((entry) => {\n            if (entry && entry.split(\",\")[0] === \"M\") {\n              let fileEntry = entry.split(\",\")[1];\n              const styleSelector = \" bg-indigo-100 border-b border-indigo-400\";\n              return (\n                <div\n                  className={`p-2 text-sm break-words hover:bg-indigo-100 cursor-pointer ${\n                    fileEntry === activeFileName ? styleSelector : \"\"\n                  }`}\n                  onClick={() => {\n                    setActiveFileName(fileEntry);\n                    fileDiffStatComponent(repoId, fileEntry);\n                  }}\n                  key={fileEntry}\n                >\n                  {fileEntry}\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n      </>\n    );\n  }\n  function fileDiffStatComponent(repoId, fileName) {\n    const apiEndPoint = globalAPIEndpoint;\n\n    const payload = JSON.stringify(\n      JSON.stringify({ repoId: repoId, fileName: fileName })\n    );\n\n    axios({\n      url: apiEndPoint,\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      data: {\n        query: `\n          query GitConvexApi{\n            gitConvexApi(route: \"${ROUTE_REPO_FILE_DIFF}\", payload:${payload})\n            {\n              gitFileLineChanges{\n                diffStat\n                fileDiff\n              }\n            }\n          }\n        `,\n      },\n    })\n      .then((res) => {\n        const {\n          diffStat,\n          fileDiff,\n        } = res.data.data.gitConvexApi.gitFileLineChanges;\n\n        setDiffStatState(diffStat[1]);\n        setFileLineDiffState(fileDiff);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function statFormat() {\n    if (diffStatState && diffStatState.includes(\",\")) {\n      let splitStat = diffStatState.split(\",\");\n\n      return (\n        <div className=\"text-xl text-center w-3/4 mx-auto block p-2 border border-gray-500 rounded-md shadow-md border-dotted\">\n          <span className=\"font-sans font-bold px-1\">{splitStat[0]}</span>\n          {splitStat.slice(1, splitStat.length).map((parts) => {\n            if (parts.match(/insert/i)) {\n              return (\n                <span key={`${parts}-${new Date().getTime()}`}>\n                  <span className=\"px-2\">{parts.toString().split(\" \")[1]}</span>\n                  <span className=\"text-green-700 font-sans font-semibold\">\n                    {\" \"}\n                    insertions (+)\n                  </span>\n                </span>\n              );\n            } else {\n              return (\n                <span key={`${parts}-${new Date().getTime()}`}>\n                  <span className=\"px-2\">{parts.toString().split(\" \")[1]}</span>\n                  <span className=\"text-red-700 font-sans font-semibold\">\n                    {\" \"}\n                    deletions (+)\n                  </span>\n                </span>\n              );\n            }\n          })}\n        </div>\n      );\n    }\n  }\n\n  function fileLineDiffComponent() {\n    let splitLines = [];\n    if (fileLineDiffState) {\n      let partFile = fileLineDiffState\n        .join(\"|__HASH_SEPARATOR__|\")\n        .split(/@@.*@@/gi)[1]\n        .split(\"|__HASH_SEPARATOR__|\");\n\n      splitLines = partFile.map((line) => {\n        if (line[0] === \"+\") {\n          return (\n            <div className=\"bg-green-200 w-screen\" key={`${line}-${uuidv4()}`}>\n              <pre>\n                <code\n                  dangerouslySetInnerHTML={{\n                    __html: Prism.highlight(\n                      line.replace(\"+\", \"\"),\n                      Prism.languages.javascript,\n                      \"javascript\"\n                    ),\n                  }}\n                ></code>\n              </pre>\n            </div>\n          );\n        } else if (line[0] === \"-\") {\n          return (\n            <div className=\"bg-red-200 w-screen\" key={`${line}-${uuidv4()}`}>\n              <pre>\n                <pre>\n                  <code\n                    dangerouslySetInnerHTML={{\n                      __html: Prism.highlight(\n                        line.replace(\"-\", \"\"),\n                        Prism.languages.javascript,\n                        \"javascript\"\n                      ),\n                    }}\n                  ></code>\n                </pre>\n              </pre>\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"bg-white-200 w-screen\" key={`${line}-${uuidv4()}`}>\n              <pre>\n                <code\n                  dangerouslySetInnerHTML={{\n                    __html: Prism.highlight(\n                      line,\n                      Prism.languages.javascript,\n                      \"javascript\"\n                    ),\n                  }}\n                ></code>\n              </pre>\n            </div>\n          );\n        }\n      });\n    }\n\n    return <div className=\"break-all my-6 mx-auto\">{splitLines}</div>;\n  }\n\n  return (\n    <>\n      {changedFiles && changedFiles.length > 0 ? (\n        <>\n          <div className=\"flex mx-auto w-full justify-center\">\n            <div className=\"break-words p-2 py-2 bg-indigo-200 text-indigo-800 w-1/4 overflow-hidden\">\n              {getDiffFiles()}\n            </div>\n\n            {!activeFileName ? (\n              <div className=\"p-3 shadow-md rounded-sm text-center mx-auto my-auto mt-3 block text-md font-sans\">\n                Click on a file to see difference information\n              </div>\n            ) : (\n              \"\"\n            )}\n\n            {diffStatState &&\n            diffStatState !== \"Click on a file item to see the difference\" ? (\n              <div className=\"p-2 break-all w-3/4 mx-auto\">\n                {diffStatState ? statFormat() : \"\"}\n                {fileLineDiffState &&\n                fileLineDiffState !==\n                  \"Click on a file item to see the difference\" ? (\n                  <div className=\"p-2 py-6 mt-6 text-left break-words overflow-scroll\">\n                    {fileLineDiffComponent()}\n                  </div>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </>\n      ) : (\n        <>\n          {isApiCalled ? (\n            <div className=\"my-3 mx-auto text-center p-3 rounded-md shadow-md bg-pink-200 text-gray-700\">\n              <span>No Changed files are being tracked currently!</span>\n            </div>\n          ) : null}\n        </>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_GIT_STAGED_FILES,\n} from \"../../../../../util/env_config\";\n\nexport default function CommitComponent(props) {\n  const { repoId } = props;\n\n  const [loading, setLoading] = useState(true);\n  const [stagedFilesState, setStagedFilesState] = useState([]);\n  const [commitDone, setCommitDone] = useState(false);\n  const [commitError, setCommitError] = useState(false);\n\n  const commitRef = useRef();\n\n  useEffect(() => {\n    const payload = JSON.stringify(JSON.stringify({ repoId: props.repoId }));\n    const cancelToken = axios.CancelToken;\n    const source = cancelToken.source();\n\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      cancelToken: source.token,\n      data: {\n        query: `\n            query GitConvexApi{\n              gitConvexApi(route: \"${ROUTE_GIT_STAGED_FILES}\", payload:${payload})\n              {\n                gitStagedFiles{\n                    stagedFiles\n                }\n              }\n            }\n          `,\n      },\n    })\n      .then((res) => {\n        const { stagedFiles } = res.data.data.gitConvexApi.gitStagedFiles;\n        setLoading(false);\n\n        if (stagedFiles && stagedFiles.length > 0) {\n          setStagedFilesState([...stagedFiles]);\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n      });\n\n    return () => {\n      source.cancel();\n    };\n  }, [props]);\n\n  function commitHandler(commitMsg) {\n    commitMsg = commitMsg.toString().split(\"\\n\");\n\n    console.log(commitMsg.join(\"||\"));\n\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      data: {\n        query: `\n          mutation GitConvexMutation{\n            commitChanges(repoId: \"${repoId}\", commitMessage: \"${commitMsg}\")\n          }\n        `,\n      },\n    })\n      .then((res) => {\n        if (\n          res.data.data &&\n          !res.data.error &&\n          res.data.data.commitChanges === \"COMMIT_DONE\"\n        ) {\n          setCommitDone(true);\n        } else {\n          setCommitError(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setCommitError(true);\n      });\n  }\n\n  function commitComponent() {\n    if (stagedFilesState && stagedFilesState.length > 0) {\n      const stagedCount = stagedFilesState.length;\n\n      return (\n        <>\n          {!commitDone ? (\n            <div className=\"p-3 mx-auto w-5/6 block justify-center\">\n              <div className=\"text-2xl my-2 font-sans font-semibold\">\n                {stagedCount} Changes to commit...\n              </div>\n              <div className=\"overflow-auto\" style={{ height: \"300px\" }}>\n                {stagedFilesState.map((stagedFile) => {\n                  return (\n                    <div\n                      className=\"m-1 mx-auto w-11/12 break-all border-b text-left font-sans text-gray-700\"\n                      key={stagedFile}\n                    >\n                      {stagedFile}\n                    </div>\n                  );\n                })}\n              </div>\n              <div className=\"text-xl my-4\">Commit Message</div>\n              <textarea\n                className=\"p-2 rounded-md shadow-md text-gray-900 font-sans w-full outline-none\"\n                placeholder=\"Enter commit message\"\n                cols=\"20\"\n                rows=\"5\"\n                ref={commitRef}\n              ></textarea>\n              {commitError ? (\n                <div className=\"my-2 mx-auto text-center p-2 rounded shadow bg-red-200 border-red-400 text-red-800\">\n                  Commit Failed!\n                </div>\n              ) : null}\n              <div\n                className=\"my-4 p-2 text-center mx-auto text-xl bg-green-400 hover:bg-green-700 rounded shadow w-full cursor-pointer text-white\"\n                onClick={(event) => {\n                  const commitMsg = commitRef.current.value;\n\n                  if (commitMsg) {\n                    commitHandler(commitMsg);\n                  } else {\n                    alert(\"Commit message can't be empty\");\n                  }\n                }}\n              >\n                Commit Changes\n              </div>\n            </div>\n          ) : (\n            <div className=\"mx-auto my-2 p-3 bg-green-300 text-green-800 rounded- shadow\">\n              All changes are committed!\n            </div>\n          )}\n        </>\n      );\n    }\n  }\n\n  return (\n    <div className=\"w-1/2 mx-auto my-auto bg-gray-200 p-6 rounded-md\">\n      {stagedFilesState && stagedFilesState.length > 0 ? (\n        commitComponent()\n      ) : (\n        <div className=\"bg-orange-200 rounded-md shadow-md p-4 text-2xl font-sans text-center font-bold text-orange-700\">\n          {loading ? (\n            <span>Loading Commits...</span>\n          ) : (\n            <span>No Staged files to commit</span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_REPO_DETAILS,\n  GIT_UNPUSHED_COMMITS,\n} from \"../../../../../util/env_config\";\n\nexport default function PushComponent(props) {\n  const { repoId } = props;\n\n  const [remoteData, setRemoteData] = useState();\n  const [isRemoteSet, setIsRemoteSet] = useState(false);\n  const [isBranchSet, setIsBranchSet] = useState(false);\n  const [unpushedCommits, setUnpushedCommits] = useState([]);\n  const [isCommitEmpty, setIsCommitEmpty] = useState(false);\n\n  const [pushDone, setPushDone] = useState(false);\n  const [pushFailed, setPushFailed] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  const remoteRef = useRef();\n  const branchRef = useRef();\n\n  useEffect(() => {\n    let payload = JSON.stringify(JSON.stringify({ repoId: props.repoId }));\n\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      data: {\n        query: `\n                query GitConvexApi\n                {\n                  gitConvexApi(route: \"${ROUTE_REPO_DETAILS}\", payload: ${payload}){\n                    gitRepoStatus {\n                      gitRemoteData\n                      gitCurrentBranch\n                      gitRemoteHost\n                      gitBranchList \n                    }\n                  }\n                }\n              `,\n      },\n    })\n      .then((res) => {\n        const repoDetails = res.data.data.gitConvexApi.gitRepoStatus;\n        setRemoteData(repoDetails);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props]);\n\n  function getUnpushedCommits() {\n    let payload = JSON.stringify(JSON.stringify({ repoId: props.repoId }));\n\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      data: {\n        query: `\n          query GitConvexApi\n          {\n            gitConvexApi(route: \"${GIT_UNPUSHED_COMMITS}\", payload: ${payload}){\n              gitUnpushedCommits{\n                commits\n              }\n            }\n          }\n        `,\n      },\n    })\n      .then((res) => {\n        if (res.data.data && !res.data.error) {\n          const { commits } = res.data.data.gitConvexApi.gitUnpushedCommits;\n          if (commits.length === 0) {\n            setIsCommitEmpty(true);\n          }\n          setUnpushedCommits([...commits]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function remoteHostGenerator() {\n    if (remoteData) {\n      const { gitRemoteData } = remoteData;\n      if (gitRemoteData.includes(\"||\")) {\n        return gitRemoteData.split(\"||\").map((item) => {\n          return (\n            <option value={item} key={item}>\n              {item}\n            </option>\n          );\n        });\n      } else {\n        return <option>{gitRemoteData}</option>;\n      }\n    }\n  }\n\n  function branchListGenerator() {\n    if (remoteData) {\n      const { gitBranchList } = remoteData;\n\n      return gitBranchList.map((branch) => {\n        if (branch !== \"NO_BRANCH\") {\n          return (\n            <option value={branch} key={branch}>\n              {branch}\n            </option>\n          );\n        }\n        return null;\n      });\n    }\n  }\n\n  function commitModel(commit) {\n    const modelLabel = [\n      \"Commit Hash\",\n      \"Commit Author\",\n      \"Commit Timestamp\",\n      \"Commit Message\",\n    ];\n    const splitCommit = commit.split(\"||\");\n\n    const localModelFormat = (left, right) => {\n      return (\n        <div className=\"flex justify-evenly\">\n          <div className=\"font-sans text-gray-900 font-bold mx-2 w-1/4 break-words\">\n            {left}\n          </div>\n          <div className=\"font-sans text-gray-800 mx-2 w-1/2 break-words\">\n            {right}\n          </div>\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"block justify-evenly border shadow rounded p-2\">\n        {modelLabel.map((label, index) => {\n          return localModelFormat(label, splitCommit[index]);\n        })}\n      </div>\n    );\n  }\n\n  function pushHandler(remote, branch) {\n    setLoading(true);\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      data: {\n        query: `\n          mutation GitConvexMutation{\n            pushToRemote(repoId: \"${repoId}\", remoteHost: \"${remote}\", branch: \"${branch}\")\n          }\n        `,\n      },\n    })\n      .then((res) => {\n        if (res.data.data && !res.data.error) {\n          setPushDone(true);\n          setLoading(false);\n        } else {\n          setPushFailed(true);\n          setLoading(false);\n        }\n      })\n      .catch((err) => {\n        setPushFailed(true);\n        setLoading(false);\n      });\n  }\n\n  return (\n    <>\n      {!pushDone ? (\n        <>\n          <div className=\"w-1/2 mx-auto my-auto p-6 rounded shadow bg-white block\">\n            <div className=\"m-3 text-2xl font-sans text-ghray-800\">\n              Available remote repos\n            </div>\n            <div>\n              <select\n                className=\"border p-3 my-4 text-xl rounded shadow\"\n                defaultValue=\"checked\"\n                onChange={() => {\n                  setIsRemoteSet(true);\n                }}\n                ref={remoteRef}\n              >\n                <option disabled hidden value=\"checked\">\n                  Select the remote repo\n                </option>\n                {remoteData ? remoteHostGenerator() : null}\n              </select>\n            </div>\n\n            {isRemoteSet ? (\n              <div>\n                <select\n                  className=\"border p-3 my-4 text-xl rounded shadow\"\n                  defaultValue=\"checked\"\n                  onChange={() => {\n                    setIsBranchSet(true);\n                    getUnpushedCommits();\n                  }}\n                  ref={branchRef}\n                >\n                  <option disabled hidden value=\"checked\">\n                    Select upstream branch\n                  </option>\n                  {remoteData ? branchListGenerator() : null}\n                </select>\n              </div>\n            ) : null}\n\n            {unpushedCommits && unpushedCommits.length > 0 ? (\n              <div className=\"my-2 p-3 rounded bg-gray-300 shadow-md border-gray-100\">\n                <div className=\"my-2 font-sans text-2xl font-semibold\">\n                  Commits to be pushed\n                </div>\n                <div className=\"overflow-auto\" style={{ height: \"200px\" }}>\n                  {unpushedCommits.map((commits, index) => {\n                    return (\n                      <div\n                        key={`unpushed-commit-${index}`}\n                        className=\"my-2 border-b-2 block justify-evenly mx-auto\"\n                      >\n                        {commitModel(commits)}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            ) : (\n              <div></div>\n            )}\n\n            {pushFailed ? (\n              <>\n                <div className=\"my-2 mx-auto text-center p-2 rounded shadow bg-red-200 border-red-400 text-red-800\">\n                  Push Failed!\n                </div>\n              </>\n            ) : null}\n\n            {isRemoteSet &&\n            isBranchSet &&\n            unpushedCommits.length > 0 &&\n            !loading ? (\n              <div\n                className=\"my-4 text-center bg-indigo-400 rounded shadow text-white text-xl font-sans p-2 mx-auto hover:bg-indigo-600 cursor-pointer\"\n                onClick={() => {\n                  const remoteHost = remoteRef.current.value;\n                  const branchName = branchRef.current.value;\n\n                  if (remoteHost && branchName) {\n                    pushHandler(remoteHost, branchName);\n                  }\n                }}\n              >\n                Push changes\n              </div>\n            ) : (\n              <>\n                {isCommitEmpty ? (\n                  <div className=\"my-4 text-center bg-gray-500 rounded shadow text-white text-xl font-sans p-2 mx-auto hover:bg-gray-600 cursor-pointer\">\n                    No Commits to Push\n                  </div>\n                ) : null}\n              </>\n            )}\n            <>\n              {loading ? (\n                <div className=\"my-4 text-center border border-orange-800 text-orange-900 bg-orange-300 rounded shadow text-white text-xl font-sans p-2 mx-auto cursor-pointer\">\n                  Pushing to remote...\n                </div>\n              ) : null}\n            </>\n          </div>\n        </>\n      ) : (\n        <div className=\"w-1/2 mx-auto my-auto p-6 rounded shadow bg-white block\">\n          <div className=\"mx-auto my-2 p-3 bg-green-300 text-green-800 rounded shadow\">\n            All commits are pushed to remote\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { globalAPIEndpoint } from \"../../../../../util/env_config\";\n\nexport default function StageComponent(props) {\n  const { stageComponents, repoId } = props;\n\n  console.log(props);\n\n  const [allStaged, setAllStaged] = useState(false);\n  const [errorInd, setErrorInd] = useState(false);\n\n  useEffect(() => {\n    if (!props) {\n      return;\n    }\n  }, [props]);\n\n  function stageAllChanges() {\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      data: {\n        query: `\n          mutation GitConvexMutation{\n            stageAllItems(repoId: \"${repoId}\")\n          }\n        `,\n      },\n    })\n      .then((res) => {\n        if (res.data.data && !res.data.error) {\n          if (res.data.data.stageAllItems === \"ALL_STAGED\") {\n            setAllStaged(true);\n          }\n        }\n      })\n      .catch((err) => {\n        setErrorInd(true);\n      });\n  }\n\n  return (\n    <>\n      <div className=\"w-1/2 mx-auto my-auto bg-gray-200 p-6 rounded-md\">\n        <>\n          {stageComponents.length > 0 && !allStaged ? (\n            <>\n              <div className=\"p-5 font-sans text-2xl font-sans font-bold\">\n                All these changes will be staged:\n              </div>\n              {stageComponents &&\n                stageComponents.map((item) => {\n                  return (\n                    <div\n                      className=\"p-1 font-sans text-lg mx-4 border-b w-11/12 break-words\"\n                      key={item}\n                    >\n                      {item}\n                    </div>\n                  );\n                })}\n              {errorInd ? (\n                <div className=\"my-2 mx-auto text-center p-2 rounded shadow bg-red-200 border-red-400 text-red-800\">\n                  Staging Failed!\n                </div>\n              ) : null}\n              <div\n                className=\"mx-auto my-4 text-center bg-green-600 text-xl p-3 rounded-md shadow-md font-sans text-white hover:bg-green-400 cursor-pointer\"\n                onClick={() => {\n                  stageAllChanges();\n                }}\n              >\n                Confirm Staging\n              </div>\n            </>\n          ) : (\n            <div className=\"p-5 bg-white text-black font-sans font-semibold rounded shadow border border-gray-100\">\n              No Changes for staging...\n            </div>\n          )}\n          {allStaged ? (\n            <div className=\"mx-auto my-2 p-3 bg-green-300 text-green-800 rounded- shadow\">\n              All changes Staged!\n            </div>\n          ) : null}\n        </>\n      </div>\n    </>\n  );\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_REPO_TRACKED_DIFF,\n  ROUTE_GIT_STAGED_FILES,\n} from \"../../../../../util/env_config\";\nimport CommitComponent from \"./CommitComponent\";\nimport PushComponent from \"./PushComponent\";\nimport StageComponent from \"./StageComponent\";\n\nexport default function GitOperationComponent(props) {\n  library.add(fab);\n  const { repoId } = props;\n\n  const [gitTrackedFiles, setGitTrackedFiles] = useState([]);\n  const [gitUntrackedFiles, setGitUntrackedFiles] = useState([]);\n\n  const [action, setAction] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [viewReload, setViewReload] = useState(0);\n  const [currentStageItem, setCurrensStageitem] = useState(\"\");\n  const [stageItems, setStagedItems] = useState([]);\n\n  useEffect(() => {\n    const payload = JSON.stringify(\n      JSON.stringify({\n        repoId: props.repoId,\n      })\n    );\n\n    const cancelToken = axios.CancelToken;\n    const source = cancelToken.source();\n\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      cancelToken: source.token,\n      data: {\n        query: `\n            query GitConvexApi{\n              gitConvexApi(route: \"${ROUTE_REPO_TRACKED_DIFF}\", payload:${payload})\n              {\n                gitChanges{\n                  gitUntrackedFiles\n                  gitChangedFiles\n                }\n              }\n            }\n        `,\n      },\n    })\n      .then((res) => {\n        if (res.data.data) {\n          var apiData = res.data.data.gitConvexApi.gitChanges;\n\n          setGitTrackedFiles([...apiData.gitChangedFiles]);\n          setGitUntrackedFiles([...apiData.gitUntrackedFiles]);\n\n          const apiTrackedFiles = [...apiData.gitChangedFiles];\n          const apiUnTrackedFiles = [...apiData.gitUntrackedFiles];\n\n          let componentList = [];\n\n          apiTrackedFiles &&\n            apiTrackedFiles.forEach((item) => {\n              if (item.split(\",\").length > 0) {\n                const trackedItem = item.split(\",\")[1];\n                componentList.push(trackedItem);\n              }\n            });\n\n          apiUnTrackedFiles &&\n            apiUnTrackedFiles.forEach((item) => {\n              if (item) {\n                item = item.replace(\"NO_DIR\", \"\");\n                item.split(\",\")\n                  ? componentList.push(item.split(\",\").join(\"\"))\n                  : componentList.push(item);\n              }\n            });\n\n          setList([...componentList]);\n        }\n      })\n      .catch((err) => {\n        // console.log(err);\n      });\n\n    return () => {\n      source.cancel();\n    };\n  }, [props, viewReload, currentStageItem]);\n\n  useEffect(() => {\n    const cancelToken = axios.CancelToken;\n    const source = cancelToken.source();\n\n    const payload = JSON.stringify(\n      JSON.stringify({\n        repoId: props.repoId,\n      })\n    );\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      cancelToken: source.token,\n      data: {\n        query: `\n            query GitConvexApi{\n              gitConvexApi(route: \"${ROUTE_GIT_STAGED_FILES}\", payload:${payload})\n              {\n                gitStagedFiles{\n                    stagedFiles\n                }\n              }\n            }\n          `,\n      },\n    })\n      .then((res) => {\n        const { stagedFiles } = res.data.data.gitConvexApi.gitStagedFiles;\n\n        if (stagedFiles && stagedFiles.length > 0) {\n          setStagedItems([...stagedFiles]);\n        }\n      })\n      .catch((err) => {});\n\n    return () => {\n      return source.cancel();\n    };\n  }, [list, props.repoId, viewReload]);\n\n  const actionButtons = [\n    {\n      label: \"Stage all changes\",\n      color: \"blue\",\n      key: \"stage\",\n    },\n    {\n      label: \"Commit Changes\",\n      color: \"green\",\n      key: \"commit\",\n    },\n    {\n      label: \"Push to remote\",\n      color: \"pink\",\n      key: \"push\",\n    },\n  ];\n\n  const tableColumns = [\"Changes\", \"File Status\", \"Action\"];\n\n  function stageGitComponent(stageItem) {\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      data: {\n        query: `\n          mutation GitConvexMutation{\n            stageItem(repoId: \"${repoId}\", item: \"${stageItem}\")\n          }\n        `,\n      },\n    })\n      .then((res) => {\n        if (res.data.data && !res.data.error) {\n          if (res.data.data.stageItem === \"ADD_ITEM_SUCCES\") {\n            setCurrensStageitem(stageItem);\n          }\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function getTableData() {\n    let tableDataArray = [];\n\n    let statusPill = (status) => {\n      if (status === \"M\") {\n        return (\n          <div className=\"p-1 text-center text-yellow-700 border border-yellow-500 rounded-md shadow-sm\">\n            Modified\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"p-1 text-center text-indigo-700 border border-indigo-500 rounded-md shadow-sm\">\n            Untracked\n          </div>\n        );\n      }\n    };\n\n    let actionButton = (stageItem) => {\n      return (\n        <div\n          className=\"p-1 bg-green-300 text-white rounded-md shadow-sm hover:shadow-md hover:bg-green-600\"\n          onClick={(event) => {\n            stageGitComponent(stageItem);\n          }}\n        >\n          Add\n        </div>\n      );\n    };\n\n    gitTrackedFiles &&\n      gitTrackedFiles.forEach((item) => {\n        if (item.split(\",\").length > 0) {\n          const trackedItem = item.split(\",\")[1];\n          tableDataArray.push([\n            trackedItem,\n            statusPill(item.split(\",\")[0]),\n            actionButton(trackedItem),\n          ]);\n        }\n      });\n\n    gitUntrackedFiles &&\n      gitUntrackedFiles.forEach((item) => {\n        if (item) {\n          item = item.replace(\"NO_DIR\", \"\");\n          item.split(\",\")\n            ? tableDataArray.push([\n                item.split(\",\").join(\"\"),\n                statusPill(\"N\"),\n                actionButton(item.split(\",\").join(\"\")),\n              ])\n            : tableDataArray.push([item, statusPill(\"N\"), actionButton(item)]);\n        }\n      });\n    return tableDataArray;\n  }\n\n  function getStagedFilesComponent() {\n    function removeStagedItem(item) {\n      axios({\n        url: globalAPIEndpoint,\n        method: \"POST\",\n        data: {\n          query: `\n            mutation GitConvexMutation{\n              removeStagedItem(repoId: \"${repoId}\", item: \"${item}\")\n            }\n          `,\n        },\n      })\n        .then((res) => {\n          let localReload = viewReload + 1;\n          setViewReload(localReload);\n          if (res.data.data && !res.data.error) {\n            if (res.data.data.removeStagedItem === \"STAGE_REMOVE_SUCCESS\") {\n              let localStagedItems = stageItems;\n\n              localStagedItems = localStagedItems.filter((filterItem) => {\n                if (filterItem === item) {\n                  return false;\n                }\n                return true;\n              });\n\n              setStagedItems([...localStagedItems]);\n            }\n          }\n        })\n        .catch((err) => {});\n    }\n\n    function removeAllStagedItems() {\n      axios({\n        url: globalAPIEndpoint,\n        method: \"POST\",\n        data: {\n          query: `\n            mutation GitConvexMutation{\n              removeAllStagedItem(repoId: \"${repoId}\")\n            }\n          `,\n        },\n      })\n        .then((res) => {\n          let localReload = viewReload + 1;\n          setViewReload(localReload);\n          if (res.data.data && !res.data.error) {\n            if (\n              res.data.data.removeAllStagedItem === \"STAGE_ALL_REMOVE_SUCCESS\"\n            ) {\n              setStagedItems([]);\n            }\n          }\n        })\n        .catch((err) => {});\n    }\n\n    if (stageItems && stageItems.length > 0) {\n      return (\n        <div className=\"w-full mx-auto my-20 p-2 border border-gray-200 rounded\">\n          <div className=\"flex items-center align-middle my-4\">\n            <div className=\"text-5xl font-sans text-gray-800 mx-4\">\n              Staged Files\n            </div>\n            <div\n              className=\"p-2 rounded text-white bg-red-700 text-xl rounded shadow cursor-pointer hover:bg-red-800\"\n              onClick={() => {\n                removeAllStagedItems();\n              }}\n            >\n              Remove All Items\n            </div>\n          </div>\n          <div className=\"flex mx-auto p-2 text-center font-sans text-lg text-white bg-indigo-400 rounded\">\n            <div className=\"w-3/4\">Staged File</div>\n            <div className=\"w-1/4\">Action</div>\n          </div>\n          <div className=\"block mx-auto\">\n            {stageItems.map((item) => {\n              if (item) {\n                return (\n                  <div\n                    className=\"flex mx-auto my-4 border-b my-auto items-center align-middle py-4\"\n                    key={item}\n                  >\n                    <div className=\"w-3/4 break-all mx-4 text-xl text-gray-800 font-sans\">\n                      {item}\n                    </div>\n                    <div className=\"w-1/4 mx-auto\">\n                      <div\n                        className=\"mx-auto w-1/4 text-white cursor-pointer break-all text-center p-2 rounded bg-red-500 shadow hover:bg-red-600 hover:shadow-md\"\n                        onClick={() => {\n                          removeStagedItem(item);\n                        }}\n                      >\n                        Remove\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n              return null;\n            })}\n          </div>\n        </div>\n      );\n    }\n  }\n\n  function actionComponent(action) {\n    switch (action) {\n      case \"stage\":\n        if (list && list.length > 0) {\n          return (\n            <StageComponent\n              repoId={repoId}\n              stageComponents={list}\n            ></StageComponent>\n          );\n        } else {\n          return (\n            <div className=\"w-1/2 mx-auto my-auto bg-gray-200 p-6 rounded-md\">\n              <div className=\"p-5 bg-white text-black font-sans font-semibold rounded shadow border border-gray-100\">\n                No Changes for staging...\n              </div>\n            </div>\n          );\n        }\n      case \"commit\":\n        return <CommitComponent repoId={repoId}></CommitComponent>;\n      case \"push\":\n        return <PushComponent repoId={repoId}></PushComponent>;\n      default:\n        return null;\n    }\n  }\n\n  function noChangesComponent() {\n    return (\n      <div className=\"p-2 mx-auto my-10 bg-orange-300 text-xl text-center rounded shadow\">\n        No files to stage\n      </div>\n    );\n  }\n\n  return (\n    <>\n      {action ? (\n        <div\n          className=\"fixed w-full h-full top-0 left-0 right-0 flex overflow-auto\"\n          id=\"operation-backdrop\"\n          style={{ background: \"rgba(0,0,0,0.6)\" }}\n          onClick={(event) => {\n            if (event.target.id === \"operation-backdrop\") {\n              setAction(\"\");\n              let closeViewCount = viewReload + 1;\n              setViewReload(closeViewCount);\n              setStagedItems([]);\n            }\n          }}\n        >\n          {actionComponent(action)}\n\n          <div\n            className=\"float-right p-1 my-2 bg-red-500 text-2xl cursor-pointer text-center text-white my-5 pl-2 pr-2 h-12 align-middle rounded-sm shadow-md mr-5\"\n            onClick={() => {\n              setAction(\"\");\n            }}\n          >\n            X\n          </div>\n        </div>\n      ) : null}\n      <div className=\"my-2 flex mx-auto p-3 justify-around\">\n        {actionButtons.map((item) => {\n          const { label, color, key } = item;\n          return (\n            <div\n              className={`my-auto align-middle item-center w-1/4 text-center p-2 rounded-md bg-0 border border-${color}-500 text-${color}-700 font-sans text-xl cursor-pointer hover:bg-${color}-500 hover:text-white`}\n              key={key}\n              onClick={() => setAction(key)}\n            >\n              {label}\n            </div>\n          );\n        })}\n      </div>\n      {getTableData() && getTableData().length > 0 ? (\n        <table\n          className=\"table border-0 w-full cursor-pointer\"\n          cellPadding=\"10\"\n        >\n          <thead>\n            <tr className=\"bg-orange-300 p-3 text-xl font-sans\">\n              {tableColumns.map((column) => {\n                return (\n                  <th\n                    key={column}\n                    className=\"font-bold border-r border-gray-200\"\n                  >\n                    {column}\n                  </th>\n                );\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {getTableData() &&\n              getTableData().map((tableData, index) => {\n                return (\n                  <tr\n                    className=\"text-md font-sans border-b border-gray-300\"\n                    key={`tableItem-${index}`}\n                  >\n                    {tableData.map((data, index) => {\n                      return (\n                        <td\n                          key={`${data}-${index}`}\n                          className={`${\n                            index === 0 ? \"text-left\" : \"text-center\"\n                          }`}\n                        >\n                          {data}\n                        </td>\n                      );\n                    })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      ) : (\n        <>{noChangesComponent()}</>\n      )}\n      <>{stageItems ? getStagedFilesComponent() : null}</>\n    </>\n  );\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport {\n  GIT_TRACKED_FILES,\n  GIT_ACTION_TRACKED_FILES,\n  GIT_ACTION_UNTRACKED_FILES,\n} from \"../../../../actionStore\";\nimport { ContextProvider } from \"../../../../context\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_REPO_TRACKED_DIFF,\n} from \"../../../../util/env_config\";\nimport GitDiffViewComponent from \"./GitDiffViewComponent\";\nimport GitOperationComponent from \"./GitOperation/GitOperationComponent\";\n\nexport default function GitTrackedComponent(props) {\n  library.add(fab);\n  const [gitDiffFilesState, setGitDiffFilesState] = useState([]);\n  const [gitUntrackedFilesState, setGitUntrackedFilesState] = useState([]);\n  const [topMenuItemState, setTopMenuItemState] = useState(\"File View\");\n  const topMenuItems = [\"File View\", \"Git Difference\", \"Git Operations\"];\n  const [noChangeMarker, setNoChangeMarker] = useState(false);\n\n  const { dispatch } = useContext(ContextProvider);\n\n  const memoizedGitDiffView = useMemo(() => {\n    return <GitDiffViewComponent repoId={props.repoId}></GitDiffViewComponent>;\n  }, [props]);\n\n  const memoizedGitOperationView = useMemo(() => {\n    return (\n      <GitOperationComponent repoId={props.repoId}></GitOperationComponent>\n    );\n  }, [props]);\n\n  useEffect(() => {\n    let apiEndPoint = globalAPIEndpoint;\n\n    const payload = JSON.stringify(\n      JSON.stringify({\n        repoId: props.repoId,\n      })\n    );\n\n    axios({\n      url: apiEndPoint,\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      data: {\n        query: `\n            query GitConvexApi{\n              gitConvexApi(route: \"${ROUTE_REPO_TRACKED_DIFF}\", payload:${payload})\n              {\n                gitChanges{\n                  gitUntrackedFiles\n                  gitChangedFiles\n                }\n              }\n            }\n        `,\n      },\n    })\n      .then((res) => {\n        if (res) {\n          var apiData = res.data.data.gitConvexApi.gitChanges;\n          const { gitChangedFiles, gitUntrackedFiles } = apiData;\n\n          if (\n            (gitChangedFiles || gitUntrackedFiles) &&\n            (gitChangedFiles.length > 0 || gitUntrackedFiles.length > 0)\n          ) {\n            setGitDiffFilesState([...gitChangedFiles]);\n            setGitUntrackedFilesState([...gitUntrackedFiles]);\n            setNoChangeMarker(false);\n\n            dispatch({\n              type: GIT_TRACKED_FILES,\n              payload: gitChangedFiles,\n            });\n\n            dispatch({\n              type: GIT_ACTION_TRACKED_FILES,\n              payload: [...gitChangedFiles],\n            });\n\n            dispatch({\n              type: GIT_ACTION_UNTRACKED_FILES,\n              payload: [...gitUntrackedFiles],\n            });\n          } else {\n            setNoChangeMarker(true);\n          }\n        }\n      })\n      .catch((err) => {\n        setNoChangeMarker(true);\n      });\n  }, [props, dispatch]);\n\n  function diffPane() {\n    var deletedArtifacts = [];\n    var modifiedArtifacts = [];\n\n    if (gitDiffFilesState && gitDiffFilesState.length > 0) {\n      gitDiffFilesState.forEach((diffFile, index) => {\n        var splitFile = diffFile.split(\",\");\n        var flag = splitFile[0];\n        var name = splitFile[1];\n        var styleSelector = \"p-1 \";\n        switch (flag) {\n          case \"M\":\n            styleSelector += \"text-yellow-900 bg-yellow-200\";\n            modifiedArtifacts.push(\n              <div className=\"flex mx-auto justify-between\" key={name}>\n                <div className={`${styleSelector} w-11/12`}> {name} </div>\n                <div className=\"rounded-lg shadow-sm border border-gray-300 p-2 text-center w-1/6\">\n                  Modified\n                </div>\n              </div>\n            );\n            break;\n          case \"D\":\n            styleSelector += \"text-red-900 bg-red-200\";\n            deletedArtifacts.push(\n              <div className=\"flex mx-auto justify-between\" key={name}>\n                <div className={`${styleSelector} w-11/12`}> {name} </div>\n                <div className=\"rounded-sm shadow-sm border border-gray-300 p-2 text-center w-1/6\">\n                  Deleted\n                </div>\n              </div>\n            );\n            break;\n          default:\n            styleSelector += \"text-indigo-900 bg-indigo-200\";\n            break;\n        }\n      });\n\n      return (\n        <>\n          {modifiedArtifacts} {deletedArtifacts}\n        </>\n      );\n    }\n  }\n\n  function untrackedPane() {\n    let untrackedDir = [];\n    let untrackedFile = [];\n\n    gitUntrackedFilesState.forEach((entry) => {\n      let splitEntry = entry.split(\",\");\n\n      if (splitEntry) {\n        untrackedDir.push(\n          <div className=\"font-sans font-semibold\">\n            {splitEntry[0] !== \"NO_DIR\" ? splitEntry[0] : \"./\"}\n          </div>\n        );\n        untrackedFile.push(<div className=\"font-sans\"> {splitEntry[1]} </div>);\n      }\n    });\n\n    return untrackedDir.map((entry, index) => {\n      return (\n        <div className=\"flex\" key={`${entry}-${index}`}>\n          <div className=\"bg-indigo-100 text-indigo-800 flex p-2 block w-11/12\">\n            {untrackedDir[index]} {untrackedFile[index]}\n          </div>\n          <div className=\"rounded-sm shadow-sm border border-gray-300 p-2 text-center w-1/6 text-sm\">\n            New / Untracked\n          </div>\n        </div>\n      );\n    });\n  }\n\n  function menuComponent() {\n    const FILE_VIEW = \"File View\";\n    const GIT_DIFFERENCE = \"Git Difference\";\n    const GIT_OPERATIONS = \"Git Operations\";\n\n    switch (topMenuItemState) {\n      case FILE_VIEW:\n        if (!noChangeMarker) {\n          return (\n            <div className=\"shadow-sm rounded-sm my-2 block justify-center mx-auto border border-gray-300\">\n              {gitDiffFilesState ? (\n                diffPane()\n              ) : (\n                <div className=\"rounded-lg shadow-md text-center p-4 font-sans\">\n                  Getting file based status...\n                </div>\n              )}\n              {gitUntrackedFilesState ? untrackedPane() : null}\n            </div>\n          );\n        }\n        break;\n      case GIT_DIFFERENCE:\n        if (!noChangeMarker) {\n          return memoizedGitDiffView;\n        }\n        break;\n      case GIT_OPERATIONS:\n        return memoizedGitOperationView;\n      default:\n        return (\n          <div className=\"text-xl text-center\"> Invalid Menu Selector! </div>\n        );\n    }\n  }\n\n  function presentChangeComponent() {\n    return (\n      <>\n        <div className=\"flex my-4 mx-auto w-11/12 justify-around font-sans font-semibold rounded-sm shadow-md cursor-pointer\">\n          {topMenuItems.map((item) => {\n            let styleSelector =\n              \"w-full py-3 px-1 text-center border-r border-blue-400 \";\n            if (item === topMenuItemState) {\n              styleSelector +=\n                \"bg-blue-100 text-blue-800 border-b border-blue-700\";\n            } else {\n              styleSelector += \"bg-blue-600 text-white\";\n            }\n            return (\n              <div\n                className={`w-full py-3 px-1 text-center border-r border-blue-400 hover:bg-blue-200 hover:text-blue-900 ${styleSelector}`}\n                key={item}\n                onClick={(event) => {\n                  setTopMenuItemState(item);\n                }}\n              >\n                {item}\n              </div>\n            );\n          })}\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      {noChangeMarker ? (\n        <>\n          <div className=\"w-11/12 block mx-auto my-6\">\n            {memoizedGitOperationView}\n          </div>\n          <div className=\"mt-10 w-11/12 rounded-sm shadow-sm h-full my-auto bock mx-auto text-center align-middle p-6 bg-pink-200 text-xl text-pink-600\">\n            No changes found in the selected git repo\n          </div>\n          <div className=\"p-6 rounded-lg border-2 border-gray-100 w-3/4 block mx-auto my-20\">\n            <div>\n              <FontAwesomeIcon\n                icon={[\"fab\", \"creative-commons-zero\"]}\n                className=\"flex text-6xl mt-20 text-center text-gray-300 font-bold mx-auto my-auto h-full w-full\"\n              ></FontAwesomeIcon>\n            </div>\n            <div className=\"block text-6xl text-gray-200 mx-auto text-center align-middle\">\n              \"0\" changes in repo\n            </div>\n          </div>\n        </>\n      ) : (\n        <>\n          {presentChangeComponent()}\n          <div className=\"w-11/12 block mx-auto my-6\"> {menuComponent()} </div>\n        </>\n      )}\n    </>\n  );\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { GIT_GLOBAL_REPOID, PRESENT_REPO } from \"../../../../actionStore\";\nimport { ContextProvider } from \"../../../../context\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_FETCH_REPO,\n  ROUTE_REPO_DETAILS,\n} from \"../../../../util/env_config\";\nimport GitTrackedComponent from \"../GitComponents/GitTrackedComponent\";\n\nexport default function RepositoryAction() {\n  library.add(fas);\n\n  const { state, dispatch } = useContext(ContextProvider);\n  const { presentRepo } = state;\n  const [selectedFlag, setSelectedFlag] = useState(false);\n  const [defaultRepo, setDefaultRepo] = useState({});\n  const [availableRepos, setAvailableRepos] = useState([]);\n  const [activeBranch, setActiveBranch] = useState(\"\");\n  const [selectedRepoDetails, setSelectedRepoDetails] = useState({\n    gitBranchList: \"\",\n    gitCurrentBranch: \"\",\n    gitTotalCommits: 0,\n    gitTotalTrackedFiles: 0,\n  });\n  const [branchError, setBranchError] = useState(false);\n\n  const memoizedGitTracker = useMemo(() => {\n    return <GitTrackedComponent repoId={defaultRepo.id}></GitTrackedComponent>;\n  }, [defaultRepo]);\n\n  useEffect(() => {\n    //Effect dep function\n\n    function fetchSelectedRepoStatus() {\n      const repoId = defaultRepo.id;\n\n      if (repoId) {\n        const payload = JSON.stringify(JSON.stringify({ repoId: repoId }));\n\n        axios({\n          url: globalAPIEndpoint,\n          method: \"POST\",\n          headers: {\n            \"Content-type\": \"application/json\",\n          },\n          data: {\n            query: `\n              query GitConvexApi\n              {\n                gitConvexApi(route: \"${ROUTE_REPO_DETAILS}\", payload: ${payload}){\n                  gitRepoStatus {\n                    gitBranchList\n                    gitCurrentBranch\n                    gitTotalCommits\n                    gitTotalTrackedFiles \n                  }\n                }\n              }\n            `,\n          },\n        })\n          .then((res) => {\n            setSelectedRepoDetails(res.data.data.gitConvexApi.gitRepoStatus);\n          })\n          .catch((err) => {\n            if (err) {\n              console.log(\"API GitStatus error occurred : \" + err);\n            }\n          });\n      }\n    }\n\n    //Effect dep function\n    async function invokeRepoFetchAPI() {\n      return await axios({\n        url: globalAPIEndpoint,\n        method: \"POST\",\n        data: {\n          query: `\n              query GitConvexApi{\n                gitConvexApi(route: \"${ROUTE_FETCH_REPO}\"){\n                  fetchRepo{\n                    repoId\n                    repoName\n                    repoPath\n                  }\n                }\n              }\n          `,\n        },\n      }).then((res) => {\n        const apiResponse = res.data.data.gitConvexApi.fetchRepo;\n\n        if (apiResponse) {\n          const repoContent = apiResponse.repoId.map((entry, index) => {\n            return {\n              id: apiResponse.repoId[index],\n              repoName: apiResponse.repoName[index],\n              repoPath: apiResponse.repoPath[index],\n            };\n          });\n\n          dispatch({\n            type: PRESENT_REPO,\n            payload: repoContent,\n          });\n          setDefaultRepo(repoContent[0]);\n          setAvailableRepos(repoContent);\n          return repoContent;\n        }\n      });\n    }\n\n    if (presentRepo && presentRepo.length >= 1) {\n      setAvailableRepos(presentRepo[0]);\n      fetchSelectedRepoStatus();\n    } else {\n      invokeRepoFetchAPI();\n      fetchSelectedRepoStatus();\n    }\n  }, [defaultRepo, activeBranch, presentRepo, dispatch, branchError]);\n\n  function setTrackingBranch(branchName, event) {\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      data: {\n        query: `\n          mutation{\n            setBranch(repoId: \"${defaultRepo.id}\", branch: \"${branchName}\")\n          }\n        `,\n      },\n    })\n      .then((res) => {\n        if (res.data.data && !res.data.error) {\n          setActiveBranch(branchName);\n        }\n      })\n      .catch((err) => {\n        if (err) {\n          setBranchError(true);\n          event.target.selectedIndex = 0;\n        }\n      });\n  }\n\n  function activeRepoPane() {\n    return (\n      <div className=\"text-center mx-auto my-auto justify-around mt-3 p-3 rounded-md shadow-sm block border-2 border-gray-300 w-1/2\">\n        <div className=\"flex justify-evenly\">\n          <div className=\"font-sans font-semibold text-gray-900 my-1 mx-2 w-1/2\">\n            Choose saved repository\n          </div>\n          <select\n            className=\"bg-green-200 text-gray-800 rounded-sm mx-2 outline-none shadow-xs border border-green-500 w-1/2\"\n            defaultValue=\"checked\"\n            onChange={(event) => {\n              setSelectedFlag(true);\n              availableRepos.forEach((elm) => {\n                if (event.target.value === elm.repoName) {\n                  setDefaultRepo(elm);\n                  dispatch({ type: GIT_GLOBAL_REPOID, payload: elm.id });\n                }\n              });\n            }}\n          >\n            <option defaultChecked value=\"checked\" hidden disabled>\n              Select a repo\n            </option>\n            {availableRepos.map((entry) => {\n              return (\n                <option value={entry.repoName} key={entry.repoName}>\n                  {entry.repoName}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        {selectedFlag ? (\n          <div className=\"text-center mx-auto my-auto mt-3 p-3 flex\">\n            <div className=\"font-sans font-semibold text-gray-900 my-1 mx-2 w-1/2\">\n              Branch\n            </div>\n            <select\n              className=\"bg-indigo-200 text-gray-800 rounded-sm mx-2 outline-none shadow-xs border border-indigo-500 w-1/2\"\n              defaultValue=\"checked\"\n              onChange={(event) => {\n                event.persist();\n                setActiveBranch(event.currentTarget.value);\n                setTrackingBranch(event.target.value, event);\n              }}\n              onClick={() => {\n                setBranchError(false);\n              }}\n            >\n              {availableBranch()}\n            </select>\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n\n  function getTopPaneComponent(icon, value) {\n    return (\n      <>\n        <div className=\"flex justify-between mx-2 font-sans text-lg text-gray-700\">\n          <div className=\"mx-2\">\n            <FontAwesomeIcon icon={[\"fas\", icon]}></FontAwesomeIcon>\n          </div>\n          <div className=\"mx-2\">{value}</div>\n        </div>\n      </>\n    );\n  }\n\n  function availableBranch() {\n    if (selectedRepoDetails && selectedRepoDetails.gitBranchList) {\n      const { gitBranchList } = selectedRepoDetails;\n\n      return gitBranchList.map((branch) => {\n        if (branch !== \"NO_BRANCH\") {\n          return (\n            <option key={branch} value={branch}>\n              {branch}\n            </option>\n          );\n        }\n\n        return null;\n      });\n    }\n  }\n\n  return (\n    <div className=\"overflow-scroll w-11/12 h-full mx-auto block justify-center overflow-x-hidden\">\n      {availableRepos ? (\n        <div>\n          <div className=\"flex text-center justify-center mt-6\">\n            {activeRepoPane()}\n            {selectedRepoDetails && selectedFlag ? (\n              <div className=\"my-auto mx-3 p-6 rounded-md shadow-sm flex mx-auto justify-center border-2 border-gray-300\">\n                {getTopPaneComponent(\n                  \"code-branch\",\n                  selectedRepoDetails.gitBranchList &&\n                    selectedRepoDetails.gitBranchList.length > 0 &&\n                    !selectedRepoDetails.gitBranchList[0].match(/NO_BRANCH/gi)\n                    ? selectedRepoDetails.gitBranchList.length\n                    : 0 + \" Branches\"\n                )}\n                {getTopPaneComponent(\n                  \"sort-amount-up\",\n                  selectedRepoDetails.gitTotalCommits + \" Commits\"\n                )}\n                {getTopPaneComponent(\n                  \"archive\",\n                  selectedRepoDetails.gitTotalTrackedFiles + \" Tracked Files\"\n                )}\n              </div>\n            ) : null}\n          </div>\n          {!selectedFlag ? (\n            <>\n              <div className=\"mt-10 w-11/12 rounded-sm shadow-sm h-full my-auto bock mx-auto text-center align-middle p-6 bg-orange-200 text-xl text-orange-900\">\n                Select a configured repo from the dropdown to perform git\n                related operations\n              </div>\n              <div className=\"p-6 rounded-lg border-2 border-gray-100 w-3/4 block mx-auto my-20\">\n                <div>\n                  <FontAwesomeIcon\n                    icon={[\"fas\", \"mouse-pointer\"]}\n                    className=\"flex text-6xl mt-20 text-center text-gray-300 font-bold mx-auto my-auto h-full w-full\"\n                  ></FontAwesomeIcon>\n                </div>\n                <div className=\"block text-6xl text-gray-200 mx-auto text-center align-middle\">\n                  No repositories selected\n                </div>\n              </div>\n            </>\n          ) : null}\n          <div>\n            {branchError ? (\n              <div className=\"p-2 rounded my-2 mx-auto text-center font-sand bg-red-200 text-red-800\">\n                Branch switching failed.Commit your changes and try again\n              </div>\n            ) : null}\n            {selectedRepoDetails && selectedFlag ? memoizedGitTracker : null}\n          </div>\n        </div>\n      ) : (\n        <div className=\"block p-4 mx-auto my-auto text-center font-sans bg-pink-200 rounded-md shadow-lg text-red-800 font-bold h-auto justify-center\">\n          {alert(\"Please add a repository!\")}\n          <Redirect to=\"/dashboard\"></Redirect>\n        </div>\n      )}\n    </div>\n  );\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_REPO_COMMIT_LOGS,\n} from \"../../../../util/env_config\";\n\nexport default function RepositoryCommitLogComponent(props) {\n  library.add(fab, fas);\n\n  const [commitLogs, setCommitLogs] = useState([]);\n  const [isCommitEmpty, setIsCommitEmpty] = useState(false);\n\n  useEffect(() => {\n    const payload = JSON.stringify(JSON.stringify({ repoId: props.repoId }));\n\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      data: {\n        query: `\n        query GitConvexApi\n        {\n            gitConvexApi(route: \"${ROUTE_REPO_COMMIT_LOGS}\", payload: ${payload}){\n                gitCommitLogs {\n                    commits{\n                        commitTime\n                        hash\n                        author\n                        commitMessage\n                    }  \n                }\n            }\n        }\n        `,\n      },\n    })\n      .then((res) => {\n        const commits = res.data.data.gitConvexApi.gitCommitLogs.commits;\n        if (commits && commits.length > 0) {\n          setCommitLogs(commits);\n        } else {\n          setIsCommitEmpty(true);\n        }\n      })\n      .catch((err) => {\n        if (err) {\n          setIsCommitEmpty(true);\n          console.log(err);\n        }\n      });\n  }, [props]);\n\n  return (\n    <>\n      {isCommitEmpty ? (\n        <div className=\"p-3 rounded-md shadow-sm block justify-center mx-auto my-4 bg-white w-3/4 text-center\">\n          No Commit Logs found\n        </div>\n      ) : null}\n      {commitLogs &&\n        commitLogs.map((commit) => {\n          const { hash, author, commitTime, commitMessage } = commit;\n          return (\n            <div\n              className=\"p-3 pb-6 rounded-md shadow-sm block justify-center mx-auto my-4 bg-white w-full border-b-4 border-blue-400\"\n              key={hash}\n            >\n              <div className=\"p-2 text-2xl font-sans text-left\">\n                <FontAwesomeIcon\n                  icon={[\"fas\", \"calendar-alt\"]}\n                ></FontAwesomeIcon>\n                <span className=\"mx-2\">{commitTime}</span>\n              </div>\n              <div className=\"p-3 m-3 text-xl text-gray-700 font-sans\">\n                {commitMessage}\n              </div>\n\n              <div className=\"flex justify-center text-center\">\n                <div className=\"rounded-l p-2 shadow-sm bg-indigo-200 text-xl font-sans ont-semibold text-indigo-900 w-1/2\">\n                  <FontAwesomeIcon\n                    icon={[\"fab\", \"slack-hash\"]}\n                  ></FontAwesomeIcon>\n                  <span className=\"mx-2\">{hash}</span>\n                </div>\n                <div className=\"rounded-r p-2 shadow-sm bg-indigo-200 text-xl font-sans ont-semibold text-indigo-900 w-1/2\">\n                  <FontAwesomeIcon icon={[\"fas\", \"at\"]}></FontAwesomeIcon>\n                  <span className=\"mx-2\">{author}</span>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n    </>\n  );\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_REPO_DETAILS,\n} from \"../../../../util/env_config\";\nimport RepositoryCommitLogComponent from \"./RepositoryCommitLogComponent\";\n\nexport default function RepositoryDetails(props) {\n  library.add(fab, fas);\n  const [gitRepoStatus, setGitRepoStatus] = useState({});\n  const [repoFetchFailed, setRepoFetchFailed] = useState(false);\n  const [repoIdState, setRepoIdState] = useState(\"\");\n  const [showCommitLogs, setShowCommitLogs] = useState(false);\n  const [isMultiRemote, setIsMultiRemote] = useState(false);\n  const [multiRemoteCount, setMultiRemoteCount] = useState(0);\n\n  const memoizedCommitLogComponent = useMemo(() => {\n    return (\n      <RepositoryCommitLogComponent\n        repoId={repoIdState}\n      ></RepositoryCommitLogComponent>\n    );\n  }, [repoIdState]);\n\n  useEffect(() => {\n    const endpointURL = globalAPIEndpoint;\n\n    if (props.parentProps.location) {\n      const repoId = props.parentProps.location.pathname.split(\n        \"/repository/\"\n      )[1];\n\n      setRepoIdState(repoId);\n\n      const payload = JSON.stringify(JSON.stringify({ repoId: repoId }));\n\n      axios({\n        url: endpointURL,\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        data: {\n          query: `\n\n            query GitConvexApi\n            {\n              gitConvexApi(route: \"${ROUTE_REPO_DETAILS}\", payload: ${payload}){\n                gitRepoStatus {\n                  gitRemoteData\n                  gitRepoName\n                  gitBranchList\n                  gitCurrentBranch\n                  gitRemoteHost\n                  gitTotalCommits\n                  gitLatestCommit\n                  gitTrackedFiles\n                  gitFileBasedCommit\n                  gitTotalTrackedFiles    \n                }\n              }\n            }\n          `,\n        },\n      })\n        .then((res) => {\n          if (res.data && res.data.data && !res.data.error) {\n            let gitRemoteLocal =\n              res.data.data.gitConvexApi.gitRepoStatus.gitRemoteData;\n            if (gitRemoteLocal.includes(\"||\")) {\n              setIsMultiRemote(true);\n              res.data.data.gitConvexApi.gitRepoStatus.gitRemoteData = gitRemoteLocal.split(\n                \"||\"\n              )[0];\n              setIsMultiRemote(true);\n              setMultiRemoteCount(gitRemoteLocal.split(\"||\").length);\n            }\n            setGitRepoStatus(res.data.data.gitConvexApi.gitRepoStatus);\n          } else {\n            setRepoFetchFailed(true);\n          }\n        })\n        .catch((err) => {\n          if (err) {\n            console.log(\"API GitStatus error occurred : \" + err);\n            setRepoFetchFailed(true);\n          }\n        });\n    }\n  }, [props.parentProps]);\n\n  const {\n    gitRemoteData,\n    gitRepoName,\n    gitBranchList,\n    gitCurrentBranch,\n    gitRemoteHost,\n    gitTotalCommits,\n    gitLatestCommit,\n    gitTrackedFiles,\n    gitFileBasedCommit,\n  } = gitRepoStatus;\n\n  const gitRepoHeaderContent = () => {\n    return (\n      <div className=\"mx-auto w-5/6 flex rounded-md shadow-md border-2 border-gray-100 p-4 justify-evenly\">\n        <div className=\"text-xl p-2 mx-2\">Repo Name</div>\n        <div className=\"bg-blue-100 text-blue-900 p-3 rounded-sm border border-blue-200\">\n          {gitRepoName}\n        </div>\n        <div className=\"text-xl p-2 mx-2\">Active Branch</div>\n        <div className=\"bg-orange-200 rounded-sm text-orange-900 p-3 border border-orange-400\">\n          {gitCurrentBranch}\n        </div>\n      </div>\n    );\n  };\n\n  const gitRepoLeftPane = () => {\n    var remoteLogo = \"\";\n\n    if (gitRemoteHost) {\n      if (gitRemoteHost.match(/github/i)) {\n        remoteLogo = (\n          <FontAwesomeIcon\n            icon={[\"fab\", \"github\"]}\n            className=\"text-2xl text-center text-pink-500\"\n          ></FontAwesomeIcon>\n        );\n      } else if (gitRemoteHost.match(/gitlab/i)) {\n        remoteLogo = (\n          <FontAwesomeIcon\n            icon={[\"fab\", \"gitlab\"]}\n            className=\"text-2xl text-center text-pink-400\"\n          ></FontAwesomeIcon>\n        );\n      } else if (gitRemoteHost.match(/bitbucket/i)) {\n        remoteLogo = (\n          <FontAwesomeIcon\n            icon={[\"fab\", \"bitbucket\"]}\n            className=\"text-2xl text-center text-pink-400\"\n          ></FontAwesomeIcon>\n        );\n      } else if (gitRemoteHost.match(/codecommit/i)) {\n        remoteLogo = (\n          <FontAwesomeIcon\n            icon={[\"fab\", \"aws\"]}\n            className=\"text-2xl text-center text-pink-400\"\n          ></FontAwesomeIcon>\n        );\n      } else {\n        remoteLogo = (\n          <FontAwesomeIcon\n            icon={[\"fab\", \"git-square\"]}\n            className=\"text-2xl text-center text-pink-400\"\n          ></FontAwesomeIcon>\n        );\n      }\n\n      return (\n        <>\n          {showCommitLogs ? (\n            <>\n              <div\n                className=\"fixed w-screen left-0 top-0 right-0 bottom-0 overflow-auto p-6\"\n                id=\"commit-log__backdrop\"\n                style={{ background: \"rgba(0,0,0,0.5)\", zIndex: 99 }}\n                onClick={(event) => {\n                  if (event.target.id === \"commit-log__backdrop\") {\n                    setShowCommitLogs(false);\n                  }\n                  console.log(\"Press\");\n                }}\n              >\n                <div\n                  className=\"float-right text-2xl font-sans pl-2 pr-2 p-1 cursor-pointer rounded-lg shadow-sm bg-red-500\"\n                  onClick={() => {\n                    setShowCommitLogs(false);\n                  }}\n                >\n                  X\n                </div>\n                <div id=\"commit-log__cards\" className=\"w-3/4 block mx-auto\">\n                  {memoizedCommitLogComponent}\n                </div>\n              </div>\n            </>\n          ) : null}\n\n          <div className=\"block rounded-md shadow-sm border-2 border-dotted border-gray-400 p-6 my-6 mx-3\">\n            <table className=\"table-auto\" cellSpacing=\"10\" cellPadding=\"20\">\n              <tbody>\n                <tr>\n                  <td className=\"text-xl text-gray-600\">Remote Host</td>\n                  <td>\n                    <div className=\"p-1 rounded-md border-2 shadow-md text-center w-full border-gray-200\">\n                      <span className=\"p-3\">{remoteLogo}</span>\n                      <span className=\"text-center text-lg\">\n                        {gitRemoteHost}\n                      </span>\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n              <tbody>\n                <tr>\n                  <td className=\"text-xl text-gray-600\">{gitRemoteHost} URL</td>\n                  <td>\n                    <span className=\"text-blue-400 hover:text-blue-500 cursor-pointer\">\n                      {gitRemoteData}\n                    </span>\n                    <div>\n                      {isMultiRemote ? (\n                        <>\n                          <span className=\"font-sans text-gray-800 font-semibold mr-2\">\n                            Entry truncated!\n                          </span>\n                          <span>Remote repos : {multiRemoteCount}</span>\n                        </>\n                      ) : null}\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n              <tbody>\n                <tr>\n                  <td className=\"text-xl text-gray-600\">Commit Logs</td>\n                  <td>\n                    <div\n                      className=\"rounded-md shadow-md p-3 text-center bg-orange-300 cursor-pointer\"\n                      onClick={(event) => {\n                        setShowCommitLogs(true);\n                      }}\n                    >\n                      Show Commit Logs\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n          <div className=\"block rounded-lg shadow-sm border-2 border-dotted border-gray-400 p-2 my-2 mx-3 w-1/2\">\n            <table className=\"table-light\" cellPadding=\"10\">\n              <tbody>\n                <tr>\n                  <td className=\"text-lg text-gray-500 w-1/2\">Total Commits</td>\n                  <td className=\"text-left text-md text-bold text-black-800 w-1/2\">\n                    {gitTotalCommits} Commits\n                  </td>\n                </tr>\n              </tbody>\n              <tbody>\n                <tr>\n                  <td className=\"text-lg text-gray-500 w-1/2\">Latest Commit</td>\n                  <td className=\"text-left text-sm text-bold w-1/2 text-black-900 w-1/2\">\n                    {gitLatestCommit}\n                  </td>\n                </tr>\n              </tbody>\n              <tbody>\n                <tr>\n                  <td className=\"text-lg text-gray-500 align-text-top w-1/2\">\n                    <div className=\"flex p-2 items-center align-middle\">\n                      <div>Available Branches</div>\n                      <div\n                        id=\"addBranch\"\n                        className=\"mx-10 rounded-full items-center align-middle w-10 h-10 text-white text-2xl bg-green-400 text-center mx-auto shadow hover:bg-green-500 cursor-pointer\"\n                        onMouseEnter={(event) => {\n                          event.stopPropagation();\n                          event.preventDefault();\n                          let popUp =\n                            '<div class=\"p-2 rounded bg-white text-gray-700 w-32 text-center border border-gray-300 text-sm my-2 relative\">Click to add a new branch</div>';\n                          event.target.innerHTML += popUp;\n                        }}\n                        onMouseLeave={(event) => {\n                          event.target.innerHTML = \"+\";\n                        }}\n                      >\n                        +\n                      </div>\n                    </div>\n                  </td>\n                  <td className=\"w-1/2\">\n                    {gitBranchList &&\n                      gitCurrentBranch &&\n                      gitBranchList.map((entry) => {\n                        return entry === gitCurrentBranch ? (\n                          <div\n                            className=\"text-lg font-semibold text-indigo-500\"\n                            key={entry}\n                          >\n                            {entry}\n                          </div>\n                        ) : (\n                          <div\n                            className=\"my-1 font-sans font-semibold\"\n                            key=\"entry-key\"\n                          >\n                            - {entry}\n                          </div>\n                        );\n                      })}\n                  </td>\n                </tr>\n                <tr>\n                  <td className=\"w-1/2\">\n                    <div className=\"rounded text-center cursor-pointer p-2 bg-indigo-500 hover:bg-indigo-600 text-white text-xl font-sans\">\n                      Fetch from remote\n                    </div>\n                  </td>\n                  <td className=\"w-1/2\">\n                    <div className=\"mx-auto text-center cursor-pointer rounded text-white p-2 bg-blue-500 hover:bg-blue-600 text-xl font-sans\">\n                      Pull from remote\n                    </div>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </>\n      );\n    } else {\n      return (\n        <div className=\"p-6 bg-orange-300 text-orange-900 my-4 rounded-lg shadow-md border border-gray-300\">\n          Fetching details from server...\n        </div>\n      );\n    }\n  };\n\n  const gitTrackedFileComponent = () => {\n    if (\n      gitTrackedFiles &&\n      gitTrackedFiles.length > 0 &&\n      gitTrackedFiles[0] !== \"NO_TRACKED_FILES\"\n    ) {\n      var formattedFiles = [];\n      var directoryEntry = [];\n      var fileEntry = [];\n\n      gitTrackedFiles.forEach((entry, index) => {\n        const splitEntry = entry.split(\":\");\n\n        if (splitEntry[1].includes(\"directory\")) {\n          directoryEntry.push(\n            <tbody key={`dir-entry-${index}`}>\n              <tr className=\"border-b border-gray-300 p-1 shadow-sm hover:bg-indigo-100\">\n                <td>\n                  <FontAwesomeIcon\n                    icon={[\"fas\", \"folder\"]}\n                    className=\"font-sans text-xl text-blue-600\"\n                  ></FontAwesomeIcon>\n                </td>\n                <td>\n                  <div className=\"text-gray-800 text-lg mx-3 font-sans\">\n                    {splitEntry[0]}\n                  </div>\n                </td>\n                <td>\n                  <div className=\"p-2 bg-green-200 text-green-900 rounded-lg text-left mx-auto w-3/5\">\n                    {gitFileBasedCommit[index]\n                      ? gitFileBasedCommit[index]\n                          .split(\" \")\n                          .filter((entry, index) => {\n                            return index !== 0 ? entry : null;\n                          })\n                          .join(\" \")\n                      : null}\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          );\n        } else {\n          fileEntry.push(\n            <tbody key={`file-entry-${index}`}>\n              <tr className=\"border-b border-gray-300 p-1 shadow-sm hover:bg-indigo-100\">\n                <td>\n                  <FontAwesomeIcon\n                    icon={[\"fas\", \"file\"]}\n                    className=\"font-sans text-xl text-gray-700\"\n                  ></FontAwesomeIcon>\n                </td>\n                <td>\n                  <div className=\"text-gray-800 text-lg mx-3 font-sans\">\n                    {splitEntry[0]}\n                  </div>\n                </td>\n                <td>\n                  <div className=\"p-2 bg-indigo-200 text-indigo-900 rounded-lg text-left mx-auto w-3/5\">\n                    {gitFileBasedCommit[index]\n                      ? gitFileBasedCommit[index]\n                          .split(\" \")\n                          .filter((entry, index) => {\n                            return index !== 0 ? entry : null;\n                          })\n                          .join(\" \")\n                      : null}\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          );\n        }\n      });\n\n      formattedFiles.push(directoryEntry);\n      formattedFiles.push(fileEntry);\n\n      return (\n        <div\n          className=\"block mx-auto justify-center p-2 text-blue-600 cursor-pointer hover:text-blue-700 overflow-auto\"\n          key=\"repo-key\"\n        >\n          <table className=\"table-auto w-full p-2 mx-auto\" cellPadding=\"10\">\n            <tbody>\n              <tr className=\"pb-6 border-b border-blue-400\">\n                <th></th>\n                <th>File / Directory</th>\n                <th>Latest commit</th>\n              </tr>\n            </tbody>\n            {formattedFiles}\n          </table>\n        </div>\n      );\n    } else if (gitTrackedFiles && gitTrackedFiles[0] === \"NO_TRACKED_FILES\") {\n      return (\n        <div className=\"bg-gray-400 rounded-lg text-black text-2xl text-center\">\n          No Tracked Files in the repo!\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"bg-gray-400 rounded-lg text-black text-2xl text-center\">\n          Loading tracked files...\n        </div>\n      );\n    }\n  };\n\n  return (\n    <>\n      <div className=\"w-full fixed bg-gray-600 opacity-50\"></div>\n      <div className=\"rp_repo-view w-screen h-screen p-6 mx-auto rounded-lg justify-evenly overflow-auto\">\n        {gitRepoStatus && !repoFetchFailed ? (\n          <>\n            <div className=\"flex px-3 py-2\">\n              {gitRepoStatus ? gitRepoHeaderContent() : null}\n            </div>\n            <div className=\"w-full\">\n              <div className=\"flex my-4 mx-auto justify-around\">\n                {gitRepoStatus ? gitRepoLeftPane() : null}\n              </div>\n            </div>\n            <div className=\"block w-11/12 my-6 mx-auto justify-center p-6 rounded-lg bg-gray-100 p-2 shadow-md overflow-auto\">\n              {gitRepoStatus ? gitTrackedFileComponent() : null}\n            </div>\n          </>\n        ) : (\n          <div className=\"text-center mx-auto rounded-lg p-3 shadow-md border border-indigo-200 text-indigo-800\">\n            Fetching repo details...\n          </div>\n        )}\n        {repoFetchFailed ? (\n          <div className=\"p-2 text-center mx-auto rounded-lg bg-red-200 text-xl\">\n            Repo details fetch failed!\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n}\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { fab } from \"@fortawesome/free-brands-svg-icons\";\nimport { fas } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport {\n  globalAPIEndpoint,\n  ROUTE_SETTINGS_DBPATH,\n  ROUTE_SETTINGS_REPODETAILS,\n} from \"../../../util/env_config\";\n\nexport default function Settings(props) {\n  library.add(fab, fas);\n\n  const dbPathTextRef = useRef();\n\n  const [dbPath, setDbPath] = useState(\"\");\n  const [repoDetails, setRepoDetails] = useState([]);\n\n  useEffect(() => {\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      data: {\n        query: `\n          query GitConvexResults{\n            gitConvexApi(route: \"${ROUTE_SETTINGS_DBPATH}\"){\n              settingsDatabasePath\n            }\n          }\n        `,\n      },\n    })\n      .then((res) => {\n        if (res.data.data && !res.data.error) {\n          const dbPathText = res.data.data.gitConvexApi.settingsDatabasePath;\n          setDbPath(dbPathText);\n          dbPathTextRef.current.value = dbPathText;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    axios({\n      url: globalAPIEndpoint,\n      method: \"POST\",\n      data: {\n        query: `\n            query GitConvexResults{\n              gitConvexApi(route: \"${ROUTE_SETTINGS_REPODETAILS}\"){\n                settingsRepoDetails{\n                  id\n                  repoPath\n                  repoName\n                  timeStamp\n                }\n              }\n            }\n          `,\n      },\n    })\n      .then((res) => {\n        if (res.data.data && !res.data.error) {\n          const repoDetailsArray =\n            res.data.data.gitConvexApi.settingsRepoDetails;\n          setRepoDetails([...repoDetailsArray]);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [props]);\n\n  const databasePathSettings = () => {\n    return (\n      <div className=\"settings-data\">\n        <div className=\"text-xl text-gray-700 font-sans font-semibold\">\n          Server data file (file which stores repo details)\n        </div>\n        <div className=\"my-4\">\n          <input\n            type=\"text\"\n            className=\"p-2 rounded border border-gray-500 bg-gray-200 text-gray-800 w-1/2\"\n            ref={dbPathTextRef}\n          ></input>\n          <div className=\"text-justify font-sand font-light text-sm my-4 text-gray-500 italic w-1/2\">\n            The data file can be updated. The data file must be an accessible\n            JSON file with read / write permissions set to it. Also make sure\n            you enter the full path for the file\n            <pre className=\"my-2\">E.g: /opt/my_data/data-file.json</pre>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const repoDetailsSettings = () => {\n    return (\n      <div className=\"repo-data my-10\">\n        <div className=\"text-xl text-gray-700 font-sans font-semibold\">\n          Saved Repos\n        </div>\n        <>\n          {repoDetails && repoDetails.length > 0 ? (\n            <>\n              <div className=\"flex my-4 bg-indigo-500 my-1 w-11/12 rounded text-white bg-white shadow p-3 font-sand text-xl font-semibold\">\n                <div className=\"w-1/2 border-r text-center\">Repo ID</div>\n                <div className=\"w-1/2 border-r text-center\">Repo Name</div>\n                <div className=\"w-1/2 border-r text-center\">Repo Path</div>\n                <div className=\"w-1/2 border-r text-center\">\n                  Created Timestamp\n                </div>\n                <div className=\"w-1/2 border-r text-center\">Action</div>\n              </div>\n              {repoDetails.map((repo) => {\n                return (\n                  <div\n                    className=\"flex my-1 w-11/12 rounded bg-white shadow p-3 font-sans text-gray-800\"\n                    key={repo.id}\n                  >\n                    <div className=\"w-1/2 px-2 border-r font-sans break-all\">\n                      {repo.id}\n                    </div>\n                    <div className=\"w-1/2 px-2 border-r font-bold font-sans break-all\">\n                      {repo.repoName}\n                    </div>\n                    <div className=\"w-1/2 px-2 border-r font-sans break-all text-sm font-light text-blue-600\">\n                      {repo.repoPath}\n                    </div>\n                    <div className=\"w-1/2 px-2 border-r font-sans break-all text-sm font-light\">\n                      {repo.timeStamp}\n                    </div>\n                    <div className=\"w-1/2 px-2 border-r font-sans break-all\">\n                      <div className=\"bg-red-600 p-2 mx-auto my-auto rounded shadow text-center w-1/4 hover:bg-red-400 cursor-pointer\">\n                        <FontAwesomeIcon\n                          color=\"white\"\n                          icon={[\"fas\", \"trash-alt\"]}\n                        ></FontAwesomeIcon>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </>\n          ) : (\n            <div className=\"my-4 mx-auto bg-gray-200 text-center p-3 rounded shadow w-3/4\">\n              No repos are being managed by Gitconvex. You can add one from the\n              dashboard\n            </div>\n          )}\n        </>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"block w-full h-full overflow-auto\">\n      <div className=\"font-sans text-6xl my-4 mx-10 text-gray-700 block items-center align-middle\">\n        <FontAwesomeIcon\n          className=\"text-5xl\"\n          icon={[\"fas\", \"cogs\"]}\n        ></FontAwesomeIcon>\n        <span className=\"mx-10\">Settings</span>\n      </div>\n      <div className=\"block my-10 justify-center mx-auto w-3/4\">\n        {dbPath ? databasePathSettings() : null}\n        {repoDetails ? repoDetailsSettings() : null}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { ContextProvider } from \"../../context\";\nimport LeftPane from \"./DashboardPaneComponents/LeftPane\";\nimport RightPane from \"./DashboardPaneComponents/RightPane\";\nimport RepositoryAction from \"./Repository/RepoComponents/RepositoryAction\";\nimport RepositoryDetails from \"./Repository/RepoComponents/RepositoryDetails\";\nimport { globalAPIEndpoint } from \"../../util/env_config\";\nimport axios from \"axios\";\nimport Settings from \"./Settings/Settings\";\n\nexport default function Dashboard(props) {\n  const { state } = useContext(ContextProvider);\n\n  const [platform, setPlatform] = useState(\"\");\n  const [gitVersion, setGitVersion] = useState(\"\");\n  const [nodeVersion, setNodeVersion] = useState(\"\");\n\n  const memoizedRepoDetails = useMemo(() => {\n    return <RepositoryDetails parentProps={props}></RepositoryDetails>;\n  }, [props]);\n\n  const memoizedSettings = useMemo(() => {\n    return <Settings></Settings>;\n  }, []);\n\n  useEffect(() => {\n    const { osCheck, gitCheck, nodeCheck } = state.hcParams;\n\n    const localStorageItems = [\"OS_TYPE\", \"NODE_VERSION\", \"GIT_VERSION\"];\n\n    if (osCheck && gitCheck && nodeCheck) {\n      setPlatform(osCheck);\n      setGitVersion(gitCheck);\n      setNodeVersion(nodeCheck);\n    } else {\n      let checkArray = localStorageItems.filter((item) => {\n        return localStorage.getItem(item) ? true : false;\n      });\n\n      if (checkArray.length === 3) {\n        setPlatform(localStorage.getItem(\"OS_TYPE\"));\n        setNodeVersion(localStorage.getItem(\"NODE_VERSION\"));\n        setGitVersion(localStorage.getItem(\"GIT_VERSION\"));\n      } else {\n        axios({\n          url: globalAPIEndpoint,\n          method: \"POST\",\n          data: {\n            query: `\n              query GitConvexAPI{\n                gitConvexApi(route:\"HEALTH_CHECK\"){\n                  healthCheck{\n                    osCheck\n                    gitCheck\n                    nodeCheck\n                  }\n                }\n              }\n            `,\n          },\n        })\n          .then((res) => {\n            if (res.data.data && !res.data.error) {\n              const {\n                osCheck,\n                gitCheck,\n                nodeCheck,\n              } = res.data.data.gitConvexApi.healthCheck;\n\n              setPlatform(JSON.parse(osCheck).message);\n              setGitVersion(JSON.parse(gitCheck).message);\n              setNodeVersion(JSON.parse(nodeCheck).message);\n            }\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n    }\n  }, [state.hcParams]);\n\n  const params = {\n    platform,\n    gitVersion,\n    nodeVersion,\n  };\n\n  const renderRightPaneComponent = () => {\n    switch (props.location.pathname) {\n      case \"/dashboard\":\n        return <RightPane params={params}></RightPane>;\n      case \"/dashboard/repository\":\n        return <RepositoryAction></RepositoryAction>;\n      case \"/dashboard/settings\":\n        return memoizedSettings;\n      default:\n        return (\n          <BrowserRouter>\n            <Route exact path=\"/dashboard/repository/:repoId\">\n              {memoizedRepoDetails}\n            </Route>\n          </BrowserRouter>\n        );\n    }\n  };\n\n  return (\n    <>\n      <div className=\"flex w-full h-full\">\n        <LeftPane parentProps={props}></LeftPane>\n        {renderRightPaneComponent()}\n      </div>\n    </>\n  );\n}\n","import axios from \"axios\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { HC_PARAM_ACTION } from \"../actionStore\";\nimport { ContextProvider } from \"../context\";\nimport { globalAPIEndpoint } from \"../util/env_config\";\nimport \"./SplashScreen.css\";\n\nexport default function SplashScreen(props) {\n  const [showAlert, setShowAlert] = useState(false);\n  const [hcCheck, setHcCheck] = useState(false);\n  const { dispatch } = useContext(ContextProvider);\n\n  useEffect(() => {\n    const apiURL = globalAPIEndpoint;\n    axios({\n      url: apiURL,\n      method: \"POST\",\n      data: {\n        query: `\n          query GitConvexAPI{\n            gitConvexApi(route:\"HEALTH_CHECK\"){\n              healthCheck{\n                osCheck\n                gitCheck\n                nodeCheck\n              }\n            }\n          }\n        `,\n      },\n    })\n      .then((res) => {\n        if (res.data.data) {\n          const {\n            osCheck,\n            gitCheck,\n            nodeCheck,\n          } = res.data.data.gitConvexApi.healthCheck;\n\n          dispatch({\n            type: HC_PARAM_ACTION,\n            payload: {\n              osCheck,\n              gitCheck,\n              nodeCheck,\n            },\n          });\n          setHcCheck(true);\n        } else {\n          setShowAlert(true);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        setShowAlert(true);\n      });\n  }, [dispatch]);\n\n  return (\n    <>\n      {!hcCheck ? (\n        <div className=\"w-64 h-full justify-center mx-auto flex my-auto align-center items-center\">\n          <div className=\"splash-logo w-64 h-full justify-center mx-auto flex my-auto align-center items-center\">\n            <div className=\"p-5 shadow-md border-l-4 border-t-4 border-blue-100 rounded-lg block\">\n              <div className=\"splash-logo__image\"></div>\n            </div>\n            <div className=\"logo-label my-3 p-3 text-center block\">\n              <div className=\"logo-label__title block text-6xl border-solid border-b-4 border-pink-200\">\n                <span className=\"logo-label__title-first font-sans font-bold mx-3\">\n                  Git\n                </span>\n                <span>Convex</span>\n              </div>\n              <div className=\"block font-mono my-2\">\n                A visualizer for your git repo\n              </div>\n            </div>\n          </div>\n\n          {showAlert ? (\n            <div className=\"fixed bottom-0 left-0 right-0 w-full p-3 rounded-lg text-center font-sans bg-red-200 border-red-900\">\n              <div className=\"h1 text-3xl p-2 m-2 text-red-800\">\n                Server Unreachable\n              </div>\n              <p>\n                The server is not reachable.Please check if the server module is\n                running.\n              </p>\n            </div>\n          ) : null}\n        </div>\n      ) : (\n        props.history.push(\"/dashboard\")\n      )}\n    </>\n  );\n}\n","import {\n  HC_PARAM_ACTION,\n  HC_DONE_SWITCH,\n  PRESENT_REPO,\n  GIT_TRACKED_FILES,\n  GIT_GLOBAL_REPOID,\n  GIT_ACTION_TRACKED_FILES,\n  GIT_ACTION_UNTRACKED_FILES,\n} from \"./actionStore\";\n\nexport default function reducer(state, action) {\n  switch (action.type) {\n    case HC_DONE_SWITCH:\n      return {\n        ...state,\n        hcDone: action.payload,\n      };\n    case HC_PARAM_ACTION:\n      const { osCheck, gitCheck, nodeCheck } = action.payload;\n\n      const parseValue = (payload) => {\n        return JSON.parse(JSON.parse(JSON.stringify(payload))).message;\n      };\n\n      localStorage.setItem(\"OS_TYPE\", parseValue(osCheck));\n      localStorage.setItem(\"GIT_VERSION\", parseValue(gitCheck));\n      localStorage.setItem(\"NODE_VERSION\", parseValue(nodeCheck));\n\n      return {\n        ...state,\n        hcParams: {\n          osCheck: parseValue(osCheck),\n          gitCheck: parseValue(gitCheck),\n          nodeCheck: parseValue(nodeCheck),\n        },\n      };\n    case PRESENT_REPO:\n      return {\n        ...state,\n        presentRepo: [...state.presentRepo, action.payload],\n      };\n    case GIT_TRACKED_FILES:\n      state.modifiedGitFiles = [];\n      return {\n        ...state,\n        modifiedGitFiles: [...state.modifiedGitFiles, action.payload],\n      };\n    case GIT_GLOBAL_REPOID:\n      state.globalRepoId = \"\";\n      return {\n        ...state,\n        globalRepoId: action.payload,\n      };\n    case GIT_ACTION_TRACKED_FILES:\n      state.gitTrackedFiles = [];\n      return {\n        ...state,\n        gitTrackedFiles: [...state.gitTrackedFiles, action.payload],\n      };\n    case GIT_ACTION_UNTRACKED_FILES:\n      state.gitUntrackedFiles = [];\n      return {\n        ...state,\n        gitUntrackedFiles: [...state.gitUntrackedFiles, action.payload],\n      };\n    default:\n      return {\n        ...state,\n      };\n  }\n}\n","import React, { useReducer } from \"react\";\nimport { Route } from \"react-router\";\nimport { BrowserRouter, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Dashboard from \"./Components/DashBoard/Dashboard\";\nimport SplashScreen from \"./Components/SplashScreen\";\nimport { ContextProvider } from \"./context\";\nimport reducer from \"./reducer\";\n\nexport default function App(props) {\n  const initialState = {\n    hcParams: {},\n    presentRepo: [],\n    modifiedGitFiles: [],\n    globalRepoId: \"\",\n    gitUntrackedFiles: [],\n    gitTrackedFiles: [],\n  };\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <div className=\"App w-full h-full\">\n      <ContextProvider.Provider value={{ state, dispatch }}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/\" exact component={SplashScreen}></Route>\n            <Route path=\"/dashboard\" exact component={Dashboard}></Route>\n            <Route path=\"/dashboard/*\" exact component={Dashboard}></Route>\n          </Switch>\n        </BrowserRouter>\n      </ContextProvider.Provider>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport \"./prism.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}